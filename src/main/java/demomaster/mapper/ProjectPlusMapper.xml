<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="demomaster.dao.ProjectPlusDAO">

    <resultMap id="resultMap" type="demomaster.vo.ProjectPlusVo">
        <result column="id" property="id"/>
        <result column="criteriaId" property="criteriaid"/>
        <result column="project_name" property="projectName"/>
        <result column="project_update_time" property="projectUpdateTime"/>
        <result column="project_type" property="projectType"/>
        <result column="project_price" property="projectPrice"/>
        <result column="project_package_type" property="projectPackageType"/>
        <result column="project_pan_address" property="projectPanAddress"/>
        <result column="project_html_body" property="projectHtmlBody"/>
        <result column="project_source_url" property="projectSourceUrl"/>
        <result column="project_language" property="projectLanguage"/>
        <result column="project_size2" property="projectSize2"/>
        <result column="project_size_num" property="projectSizeNum"/>
        <result column="project_size_type" property="projectSizeType"/>
        <result column="project_imgs" property="projectImgs"/>
        <result column="project_imgs_default" property="projectImgsDefault"/>
        <result column="project_runtime" property="projectRuntime"/>
        <result column="project_official_website" property="projectOfficialWebsite"/>
        <result column="project_show_website" property="projectShowWebsite"/>
        <result column="project_download_urls" property="projectDownloadUrls"/>
        <result column="project_download_sum" property="projectDownloadSum"/>
        <result column="project_introduction" property="projectIntroduction"/>
        <result column="project_status" property="projectStatus"/>
        <result column="project_mark" property="projectMark"/>
        <result column="project_can_running" property="projectCanRunning"/>
        <result column="project_sql" property="projectSql"/>
        <result column="project_port" property="projectPort"/>
        <result column="address_container_outer" property="addressContainerOuter"/>
        <result column="address_container_inner" property="addressContainerInner"/>
        <result column="address_project_front" property="addressProjectFront"/>
        <result column="address_project_background" property="addressProjectBackground"/>
        <result column="address_project_background_account_passwd" property="addressProjectBackgroundAccountPasswd"/>
        <result column="dev_project_real_file_name" property="devProjectRealFileName"/>
        <result column="dev_docker_image_name" property="devDockerImageName"/>
        <result column="dev_docker_image_shell_remove" property="devDockerImageShellRemove"/>
        <result column="dev_docker_container_id" property="devDockerContainerId"/>
        <result column="dev_docker_container_name" property="devDockerContainerName"/>
        <result column="dev_docker_container_shell_create" property="devDockerContainerShellCreate"/>
        <result column="dev_docker_container_shell_run" property="devDockerContainerShellRun"/>
        <result column="dev_docker_container_shell_stop" property="devDockerContainerShellStop"/>
        <result column="dev_docker_container_shell_remove" property="devDockerContainerShellRemove"/>
        <result column="dev_docker_status_images_is_exist" property="devDockerStatusImagesIsExist"/>
        <result column="dev_docker_status_container_is_exist" property="devDockerStatusContainerIsExist"/>
        <result column="dev_docker_status_container_is_running" property="devDockerStatusContainerIsRunning"/>
        <result column="pro_project_real_file_name" property="proProjectRealFileName"/>
        <result column="pro_docker_image_name" property="proDockerImageName"/>
        <result column="pro_docker_image_shell_remove" property="proDockerImageShellRemove"/>
        <result column="pro_docker_container_id" property="proDockerContainerId"/>
        <result column="pro_docker_container_name" property="proDockerContainerName"/>
        <result column="pro_docker_container_shell_create" property="proDockerContainerShellCreate"/>
        <result column="pro_docker_container_shell_run" property="proDockerContainerShellRun"/>
        <result column="pro_docker_container_shell_stop" property="proDockerContainerShellStop"/>
        <result column="pro_docker_container_shell_remove" property="proDockerContainerShellRemove"/>
        <result column="pro_docker_status_images_is_exist" property="proDockerStatusImagesIsExist"/>
        <result column="pro_docker_status_container_is_exist" property="proDockerStatusContainerIsExist"/>
        <result column="pro_docker_status_container_is_running" property="proDockerStatusContainerIsRunning"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <insert id="insert"
            parameterType="demomaster.vo.ProjectPlusVo">
        INSERT INTO `project_plus`(
        `id` ,
        `criteriaId` ,
        `project_name` ,
        `project_update_time` ,
        `project_type` ,
        `project_price` ,
        `project_package_type` ,
        `project_pan_address` ,
        `project_html_body` ,
        `project_source_url` ,
        `project_language` ,
        `project_size2` ,
        `project_size_num` ,
        `project_size_type` ,
        `project_imgs` ,
        `project_imgs_default` ,
        `project_runtime` ,
        `project_official_website` ,
        `project_show_website` ,
        `project_download_urls` ,
        `project_download_sum` ,
        `project_introduction` ,
        `project_status` ,
        `project_mark` ,
        `project_can_running` ,
        `project_sql` ,
        `project_port` ,
        `address_container_outer` ,
        `address_container_inner` ,
        `address_project_front` ,
        `address_project_background` ,
        `address_project_background_account_passwd` ,
        `dev_project_real_file_name` ,
        `dev_docker_image_name` ,
        `dev_docker_image_shell_remove` ,
        `dev_docker_container_id` ,
        `dev_docker_container_name` ,
        `dev_docker_container_shell_create` ,
        `dev_docker_container_shell_run` ,
        `dev_docker_container_shell_stop` ,
        `dev_docker_container_shell_remove` ,
        `dev_docker_status_images_is_exist` ,
        `dev_docker_status_container_is_exist` ,
        `dev_docker_status_container_is_running` ,
        `pro_project_real_file_name` ,
        `pro_docker_image_name` ,
        `pro_docker_image_shell_remove` ,
        `pro_docker_container_id` ,
        `pro_docker_container_name` ,
        `pro_docker_container_shell_create` ,
        `pro_docker_container_shell_run` ,
        `pro_docker_container_shell_stop` ,
        `pro_docker_container_shell_remove` ,
        `pro_docker_status_images_is_exist` ,
        `pro_docker_status_container_is_exist` ,
        `pro_docker_status_container_is_running` ,
        `update_time` 
        )VALUE(
          #{id}  ,
          #{criteriaid}  ,
          #{projectName}  ,
          #{projectUpdateTime}  ,
          #{projectType}  ,
          #{projectPrice}  ,
          #{projectPackageType}  ,
          #{projectPanAddress}  ,
          #{projectHtmlBody}  ,
          #{projectSourceUrl}  ,
          #{projectLanguage}  ,
          #{projectSize2}  ,
          #{projectSizeNum}  ,
          #{projectSizeType}  ,
          #{projectImgs}  ,
          #{projectImgsDefault}  ,
          #{projectRuntime}  ,
          #{projectOfficialWebsite}  ,
          #{projectShowWebsite}  ,
          #{projectDownloadUrls}  ,
          #{projectDownloadSum}  ,
          #{projectIntroduction}  ,
          #{projectStatus}  ,
          #{projectMark}  ,
          #{projectCanRunning}  ,
          #{projectSql}  ,
          #{projectPort}  ,
          #{addressContainerOuter}  ,
          #{addressContainerInner}  ,
          #{addressProjectFront}  ,
          #{addressProjectBackground}  ,
          #{addressProjectBackgroundAccountPasswd}  ,
          #{devProjectRealFileName}  ,
          #{devDockerImageName}  ,
          #{devDockerImageShellRemove}  ,
          #{devDockerContainerId}  ,
          #{devDockerContainerName}  ,
          #{devDockerContainerShellCreate}  ,
          #{devDockerContainerShellRun}  ,
          #{devDockerContainerShellStop}  ,
          #{devDockerContainerShellRemove}  ,
          #{devDockerStatusImagesIsExist}  ,
          #{devDockerStatusContainerIsExist}  ,
          #{devDockerStatusContainerIsRunning}  ,
          #{proProjectRealFileName}  ,
          #{proDockerImageName}  ,
          #{proDockerImageShellRemove}  ,
          #{proDockerContainerId}  ,
          #{proDockerContainerName}  ,
          #{proDockerContainerShellCreate}  ,
          #{proDockerContainerShellRun}  ,
          #{proDockerContainerShellStop}  ,
          #{proDockerContainerShellRemove}  ,
          #{proDockerStatusImagesIsExist}  ,
          #{proDockerStatusContainerIsExist}  ,
          #{proDockerStatusContainerIsRunning}  ,
          #{updateTime}  
        )
    </insert>

    <insert id="inserts"
            parameterType="java.util.List">
        INSERT INTO `project_plus`(
        `id`,
        `criteriaId`,
        `project_name`,
        `project_update_time`,
        `project_type`,
        `project_price`,
        `project_package_type`,
        `project_pan_address`,
        `project_html_body`,
        `project_source_url`,
        `project_language`,
        `project_size2`,
        `project_size_num`,
        `project_size_type`,
        `project_imgs`,
        `project_imgs_default`,
        `project_runtime`,
        `project_official_website`,
        `project_show_website`,
        `project_download_urls`,
        `project_download_sum`,
        `project_introduction`,
        `project_status`,
        `project_mark`,
        `project_can_running`,
        `project_sql`,
        `project_port`,
        `address_container_outer`,
        `address_container_inner`,
        `address_project_front`,
        `address_project_background`,
        `address_project_background_account_passwd`,
        `dev_project_real_file_name`,
        `dev_docker_image_name`,
        `dev_docker_image_shell_remove`,
        `dev_docker_container_id`,
        `dev_docker_container_name`,
        `dev_docker_container_shell_create`,
        `dev_docker_container_shell_run`,
        `dev_docker_container_shell_stop`,
        `dev_docker_container_shell_remove`,
        `dev_docker_status_images_is_exist`,
        `dev_docker_status_container_is_exist`,
        `dev_docker_status_container_is_running`,
        `pro_project_real_file_name`,
        `pro_docker_image_name`,
        `pro_docker_image_shell_remove`,
        `pro_docker_container_id`,
        `pro_docker_container_name`,
        `pro_docker_container_shell_create`,
        `pro_docker_container_shell_run`,
        `pro_docker_container_shell_stop`,
        `pro_docker_container_shell_remove`,
        `pro_docker_status_images_is_exist`,
        `pro_docker_status_container_is_exist`,
        `pro_docker_status_container_is_running`,
        `update_time`
        )VALUES
        <foreach collection="vos" item="item" separator=",">
            (
            #{item.id},
            #{item.criteriaid},
            #{item.projectName},
            #{item.projectUpdateTime},
            #{item.projectType},
            #{item.projectPrice},
            #{item.projectPackageType},
            #{item.projectPanAddress},
            #{item.projectHtmlBody},
            #{item.projectSourceUrl},
            #{item.projectLanguage},
            #{item.projectSize2},
            #{item.projectSizeNum},
            #{item.projectSizeType},
            #{item.projectImgs},
            #{item.projectImgsDefault},
            #{item.projectRuntime},
            #{item.projectOfficialWebsite},
            #{item.projectShowWebsite},
            #{item.projectDownloadUrls},
            #{item.projectDownloadSum},
            #{item.projectIntroduction},
            #{item.projectStatus},
            #{item.projectMark},
            #{item.projectCanRunning},
            #{item.projectSql},
            #{item.projectPort},
            #{item.addressContainerOuter},
            #{item.addressContainerInner},
            #{item.addressProjectFront},
            #{item.addressProjectBackground},
            #{item.addressProjectBackgroundAccountPasswd},
            #{item.devProjectRealFileName},
            #{item.devDockerImageName},
            #{item.devDockerImageShellRemove},
            #{item.devDockerContainerId},
            #{item.devDockerContainerName},
            #{item.devDockerContainerShellCreate},
            #{item.devDockerContainerShellRun},
            #{item.devDockerContainerShellStop},
            #{item.devDockerContainerShellRemove},
            #{item.devDockerStatusImagesIsExist},
            #{item.devDockerStatusContainerIsExist},
            #{item.devDockerStatusContainerIsRunning},
            #{item.proProjectRealFileName},
            #{item.proDockerImageName},
            #{item.proDockerImageShellRemove},
            #{item.proDockerContainerId},
            #{item.proDockerContainerName},
            #{item.proDockerContainerShellCreate},
            #{item.proDockerContainerShellRun},
            #{item.proDockerContainerShellStop},
            #{item.proDockerContainerShellRemove},
            #{item.proDockerStatusImagesIsExist},
            #{item.proDockerStatusContainerIsExist},
            #{item.proDockerStatusContainerIsRunning},
            #{item.updateTime}
            )
        </foreach>
    </insert>

    <select id="queryBase" resultMap="resultMap"
            resultType="demomaster.vo.ProjectPlusVo"
            parameterType="demomaster.vo.ProjectPlusVo">
        SELECT
        `id`,
        `criteriaId`,
        `project_name`,
        `project_update_time`,
        `project_type`,
        `project_price`,
        `project_package_type`,
        `project_pan_address`,
        `project_html_body`,
        `project_source_url`,
        `project_language`,
        `project_size2`,
        `project_size_num`,
        `project_size_type`,
        `project_imgs`,
        `project_imgs_default`,
        `project_runtime`,
        `project_official_website`,
        `project_show_website`,
        `project_download_urls`,
        `project_download_sum`,
        `project_introduction`,
        `project_status`,
        `project_mark`,
        `project_can_running`,
        `project_sql`,
        `project_port`,
        `address_container_outer`,
        `address_container_inner`,
        `address_project_front`,
        `address_project_background`,
        `address_project_background_account_passwd`,
        `dev_project_real_file_name`,
        `dev_docker_image_name`,
        `dev_docker_image_shell_remove`,
        `dev_docker_container_id`,
        `dev_docker_container_name`,
        `dev_docker_container_shell_create`,
        `dev_docker_container_shell_run`,
        `dev_docker_container_shell_stop`,
        `dev_docker_container_shell_remove`,
        `dev_docker_status_images_is_exist`,
        `dev_docker_status_container_is_exist`,
        `dev_docker_status_container_is_running`,
        `pro_project_real_file_name`,
        `pro_docker_image_name`,
        `pro_docker_image_shell_remove`,
        `pro_docker_container_id`,
        `pro_docker_container_name`,
        `pro_docker_container_shell_create`,
        `pro_docker_container_shell_run`,
        `pro_docker_container_shell_stop`,
        `pro_docker_container_shell_remove`,
        `pro_docker_status_images_is_exist`,
        `pro_docker_status_container_is_exist`,
        `pro_docker_status_container_is_running`,
        `update_time`
        FROM `project_plus`
        <where>
            1 = 1
            <if test="id != null">
                AND `id` = #{id}
            </if>
            <if test="criteriaid != null">
                AND `criteriaId` = #{criteriaid}
            </if>
            <if test="projectName != null">
                AND `project_name` = #{projectName}
            </if>
            <if test="projectUpdateTime != null">
                AND `project_update_time` = #{projectUpdateTime}
            </if>
            <if test="projectType != null">
                AND `project_type` = #{projectType}
            </if>
            <if test="projectPrice != null">
                AND `project_price` = #{projectPrice}
            </if>
            <if test="projectPackageType != null">
                AND `project_package_type` = #{projectPackageType}
            </if>
            <if test="projectPanAddress != null">
                AND `project_pan_address` = #{projectPanAddress}
            </if>
            <if test="projectHtmlBody != null">
                AND `project_html_body` = #{projectHtmlBody}
            </if>
            <if test="projectSourceUrl != null">
                AND `project_source_url` = #{projectSourceUrl}
            </if>
            <if test="projectLanguage != null">
                AND `project_language` = #{projectLanguage}
            </if>
            <if test="projectSize2 != null">
                AND `project_size2` = #{projectSize2}
            </if>
            <if test="projectSizeNum != null">
                AND `project_size_num` = #{projectSizeNum}
            </if>
            <if test="projectSizeType != null">
                AND `project_size_type` = #{projectSizeType}
            </if>
            <if test="projectImgs != null">
                AND `project_imgs` = #{projectImgs}
            </if>
            <if test="projectImgsDefault != null">
                AND `project_imgs_default` = #{projectImgsDefault}
            </if>
            <if test="projectRuntime != null">
                AND `project_runtime` = #{projectRuntime}
            </if>
            <if test="projectOfficialWebsite != null">
                AND `project_official_website` = #{projectOfficialWebsite}
            </if>
            <if test="projectShowWebsite != null">
                AND `project_show_website` = #{projectShowWebsite}
            </if>
            <if test="projectDownloadUrls != null">
                AND `project_download_urls` = #{projectDownloadUrls}
            </if>
            <if test="projectDownloadSum != null">
                AND `project_download_sum` = #{projectDownloadSum}
            </if>
            <if test="projectIntroduction != null">
                AND `project_introduction` = #{projectIntroduction}
            </if>
            <if test="projectStatus != null">
                AND `project_status` = #{projectStatus}
            </if>
            <if test="projectMark != null">
                AND `project_mark` = #{projectMark}
            </if>
            <if test="projectCanRunning != null">
                AND `project_can_running` = #{projectCanRunning}
            </if>
            <if test="projectSql != null">
                AND `project_sql` = #{projectSql}
            </if>
            <if test="projectPort != null">
                AND `project_port` = #{projectPort}
            </if>
            <if test="addressContainerOuter != null">
                AND `address_container_outer` = #{addressContainerOuter}
            </if>
            <if test="addressContainerInner != null">
                AND `address_container_inner` = #{addressContainerInner}
            </if>
            <if test="addressProjectFront != null">
                AND `address_project_front` = #{addressProjectFront}
            </if>
            <if test="addressProjectBackground != null">
                AND `address_project_background` = #{addressProjectBackground}
            </if>
            <if test="addressProjectBackgroundAccountPasswd != null">
                AND `address_project_background_account_passwd` = #{addressProjectBackgroundAccountPasswd}
            </if>
            <if test="devProjectRealFileName != null">
                AND `dev_project_real_file_name` = #{devProjectRealFileName}
            </if>
            <if test="devDockerImageName != null">
                AND `dev_docker_image_name` = #{devDockerImageName}
            </if>
            <if test="devDockerImageShellRemove != null">
                AND `dev_docker_image_shell_remove` = #{devDockerImageShellRemove}
            </if>
            <if test="devDockerContainerId != null">
                AND `dev_docker_container_id` = #{devDockerContainerId}
            </if>
            <if test="devDockerContainerName != null">
                AND `dev_docker_container_name` = #{devDockerContainerName}
            </if>
            <if test="devDockerContainerShellCreate != null">
                AND `dev_docker_container_shell_create` = #{devDockerContainerShellCreate}
            </if>
            <if test="devDockerContainerShellRun != null">
                AND `dev_docker_container_shell_run` = #{devDockerContainerShellRun}
            </if>
            <if test="devDockerContainerShellStop != null">
                AND `dev_docker_container_shell_stop` = #{devDockerContainerShellStop}
            </if>
            <if test="devDockerContainerShellRemove != null">
                AND `dev_docker_container_shell_remove` = #{devDockerContainerShellRemove}
            </if>
            <if test="devDockerStatusImagesIsExist != null">
                AND `dev_docker_status_images_is_exist` = #{devDockerStatusImagesIsExist}
            </if>
            <if test="devDockerStatusContainerIsExist != null">
                AND `dev_docker_status_container_is_exist` = #{devDockerStatusContainerIsExist}
            </if>
            <if test="devDockerStatusContainerIsRunning != null">
                AND `dev_docker_status_container_is_running` = #{devDockerStatusContainerIsRunning}
            </if>
            <if test="proProjectRealFileName != null">
                AND `pro_project_real_file_name` = #{proProjectRealFileName}
            </if>
            <if test="proDockerImageName != null">
                AND `pro_docker_image_name` = #{proDockerImageName}
            </if>
            <if test="proDockerImageShellRemove != null">
                AND `pro_docker_image_shell_remove` = #{proDockerImageShellRemove}
            </if>
            <if test="proDockerContainerId != null">
                AND `pro_docker_container_id` = #{proDockerContainerId}
            </if>
            <if test="proDockerContainerName != null">
                AND `pro_docker_container_name` = #{proDockerContainerName}
            </if>
            <if test="proDockerContainerShellCreate != null">
                AND `pro_docker_container_shell_create` = #{proDockerContainerShellCreate}
            </if>
            <if test="proDockerContainerShellRun != null">
                AND `pro_docker_container_shell_run` = #{proDockerContainerShellRun}
            </if>
            <if test="proDockerContainerShellStop != null">
                AND `pro_docker_container_shell_stop` = #{proDockerContainerShellStop}
            </if>
            <if test="proDockerContainerShellRemove != null">
                AND `pro_docker_container_shell_remove` = #{proDockerContainerShellRemove}
            </if>
            <if test="proDockerStatusImagesIsExist != null">
                AND `pro_docker_status_images_is_exist` = #{proDockerStatusImagesIsExist}
            </if>
            <if test="proDockerStatusContainerIsExist != null">
                AND `pro_docker_status_container_is_exist` = #{proDockerStatusContainerIsExist}
            </if>
            <if test="proDockerStatusContainerIsRunning != null">
                AND `pro_docker_status_container_is_running` = #{proDockerStatusContainerIsRunning}
            </if>
            <if test="updateTime != null">
                AND `update_time` = #{updateTime}
            </if>
        </where>
    </select>

     <select id="queryMultiTerm" resultMap="resultMap"
             resultType="demomaster.vo.ProjectPlusVo"
             parameterType="demomaster.vo.ProjectPlusMultiTermVo">
        SELECT
        `id`,
        `criteriaId`,
        `project_name`,
        `project_update_time`,
        `project_type`,
        `project_price`,
        `project_package_type`,
        `project_pan_address`,
        `project_html_body`,
        `project_source_url`,
        `project_language`,
        `project_size2`,
        `project_size_num`,
        `project_size_type`,
        `project_imgs`,
        `project_imgs_default`,
        `project_runtime`,
        `project_official_website`,
        `project_show_website`,
        `project_download_urls`,
        `project_download_sum`,
        `project_introduction`,
        `project_status`,
        `project_mark`,
        `project_can_running`,
        `project_sql`,
        `project_port`,
        `address_container_outer`,
        `address_container_inner`,
        `address_project_front`,
        `address_project_background`,
        `address_project_background_account_passwd`,
        `dev_project_real_file_name`,
        `dev_docker_image_name`,
        `dev_docker_image_shell_remove`,
        `dev_docker_container_id`,
        `dev_docker_container_name`,
        `dev_docker_container_shell_create`,
        `dev_docker_container_shell_run`,
        `dev_docker_container_shell_stop`,
        `dev_docker_container_shell_remove`,
        `dev_docker_status_images_is_exist`,
        `dev_docker_status_container_is_exist`,
        `dev_docker_status_container_is_running`,
        `pro_project_real_file_name`,
        `pro_docker_image_name`,
        `pro_docker_image_shell_remove`,
        `pro_docker_container_id`,
        `pro_docker_container_name`,
        `pro_docker_container_shell_create`,
        `pro_docker_container_shell_run`,
        `pro_docker_container_shell_stop`,
        `pro_docker_container_shell_remove`,
        `pro_docker_status_images_is_exist`,
        `pro_docker_status_container_is_exist`,
        `pro_docker_status_container_is_running`,
        `update_time`
        FROM `project_plus`
        <where>
            1 = 1
            <if test="id != null">
                 <if test="id._in != null">
                     AND `id` in
                     <foreach collection="id._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="id._notIn != null">
                     AND `id`  not in
                     <foreach collection="id._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="id._like != null">
                     <foreach collection="id._like" item="item">
                       AND `id` like #{item}
                     </foreach>
                 </if>
                 <if test="id._notLike != null">
                     <foreach collection="id._notLike" item="item">
                       AND `id` not like #{item}
                     </foreach>
                 </if>
                 <if test="id._regex != null">
                     <foreach collection="id._regex" item="item">
                       AND `id` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="id._regex != null">
                     <foreach collection="id._regex" item="item">
                       AND `id` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="id._lt != null">
                      AND `id` <![CDATA[ < ]]>  #{id._lt}
                 </if>
                  <if test="id._le != null">
                      AND `id` <![CDATA[ <= ]]>  #{{id._lt}
                 </if>
                  <if test="id._gt != null">
                      AND `id` <![CDATA[ > ]]>  #{{id._lt}
                 </if>
                  <if test="id._ge != null">
                      AND `id` <![CDATA[ >= ]]>  #{{id._lt}
                 </if>
            </if>
            <if test="criteriaid != null">
                 <if test="criteriaid._in != null">
                     AND `criteriaId` in
                     <foreach collection="criteriaId._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._notIn != null">
                     AND `criteriaId`  not in
                     <foreach collection="criteriaId._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._like != null">
                     <foreach collection="criteriaId._like" item="item">
                       AND `criteriaId` like #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._notLike != null">
                     <foreach collection="criteriaId._notLike" item="item">
                       AND `criteriaId` not like #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._regex != null">
                     <foreach collection="criteriaId._regex" item="item">
                       AND `criteriaId` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._regex != null">
                     <foreach collection="criteriaId._regex" item="item">
                       AND `criteriaId` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="criteriaid._lt != null">
                      AND `criteriaId` <![CDATA[ < ]]>  #{criteriaId._lt}
                 </if>
                  <if test="criteriaid._le != null">
                      AND `criteriaId` <![CDATA[ <= ]]>  #{{criteriaId._lt}
                 </if>
                  <if test="criteriaid._gt != null">
                      AND `criteriaId` <![CDATA[ > ]]>  #{{criteriaId._lt}
                 </if>
                  <if test="criteriaid._ge != null">
                      AND `criteriaId` <![CDATA[ >= ]]>  #{{criteriaId._lt}
                 </if>
            </if>
            <if test="projectName != null">
                 <if test="projectName._in != null">
                     AND `project_name` in
                     <foreach collection="project_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectName._notIn != null">
                     AND `project_name`  not in
                     <foreach collection="project_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectName._like != null">
                     <foreach collection="project_name._like" item="item">
                       AND `project_name` like #{item}
                     </foreach>
                 </if>
                 <if test="projectName._notLike != null">
                     <foreach collection="project_name._notLike" item="item">
                       AND `project_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectName._regex != null">
                     <foreach collection="project_name._regex" item="item">
                       AND `project_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectName._regex != null">
                     <foreach collection="project_name._regex" item="item">
                       AND `project_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectName._lt != null">
                      AND `project_name` <![CDATA[ < ]]>  #{project_name._lt}
                 </if>
                  <if test="projectName._le != null">
                      AND `project_name` <![CDATA[ <= ]]>  #{{project_name._lt}
                 </if>
                  <if test="projectName._gt != null">
                      AND `project_name` <![CDATA[ > ]]>  #{{project_name._lt}
                 </if>
                  <if test="projectName._ge != null">
                      AND `project_name` <![CDATA[ >= ]]>  #{{project_name._lt}
                 </if>
            </if>
            <if test="projectUpdateTime != null">
                 <if test="projectUpdateTime._in != null">
                     AND `project_update_time` in
                     <foreach collection="project_update_time._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._notIn != null">
                     AND `project_update_time`  not in
                     <foreach collection="project_update_time._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._like != null">
                     <foreach collection="project_update_time._like" item="item">
                       AND `project_update_time` like #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._notLike != null">
                     <foreach collection="project_update_time._notLike" item="item">
                       AND `project_update_time` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._regex != null">
                     <foreach collection="project_update_time._regex" item="item">
                       AND `project_update_time` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._regex != null">
                     <foreach collection="project_update_time._regex" item="item">
                       AND `project_update_time` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectUpdateTime._lt != null">
                      AND `project_update_time` <![CDATA[ < ]]>  #{project_update_time._lt}
                 </if>
                  <if test="projectUpdateTime._le != null">
                      AND `project_update_time` <![CDATA[ <= ]]>  #{{project_update_time._lt}
                 </if>
                  <if test="projectUpdateTime._gt != null">
                      AND `project_update_time` <![CDATA[ > ]]>  #{{project_update_time._lt}
                 </if>
                  <if test="projectUpdateTime._ge != null">
                      AND `project_update_time` <![CDATA[ >= ]]>  #{{project_update_time._lt}
                 </if>
            </if>
            <if test="projectType != null">
                 <if test="projectType._in != null">
                     AND `project_type` in
                     <foreach collection="project_type._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectType._notIn != null">
                     AND `project_type`  not in
                     <foreach collection="project_type._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectType._like != null">
                     <foreach collection="project_type._like" item="item">
                       AND `project_type` like #{item}
                     </foreach>
                 </if>
                 <if test="projectType._notLike != null">
                     <foreach collection="project_type._notLike" item="item">
                       AND `project_type` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectType._regex != null">
                     <foreach collection="project_type._regex" item="item">
                       AND `project_type` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectType._regex != null">
                     <foreach collection="project_type._regex" item="item">
                       AND `project_type` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectType._lt != null">
                      AND `project_type` <![CDATA[ < ]]>  #{project_type._lt}
                 </if>
                  <if test="projectType._le != null">
                      AND `project_type` <![CDATA[ <= ]]>  #{{project_type._lt}
                 </if>
                  <if test="projectType._gt != null">
                      AND `project_type` <![CDATA[ > ]]>  #{{project_type._lt}
                 </if>
                  <if test="projectType._ge != null">
                      AND `project_type` <![CDATA[ >= ]]>  #{{project_type._lt}
                 </if>
            </if>
            <if test="projectPrice != null">
                 <if test="projectPrice._in != null">
                     AND `project_price` in
                     <foreach collection="project_price._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._notIn != null">
                     AND `project_price`  not in
                     <foreach collection="project_price._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._like != null">
                     <foreach collection="project_price._like" item="item">
                       AND `project_price` like #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._notLike != null">
                     <foreach collection="project_price._notLike" item="item">
                       AND `project_price` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._regex != null">
                     <foreach collection="project_price._regex" item="item">
                       AND `project_price` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._regex != null">
                     <foreach collection="project_price._regex" item="item">
                       AND `project_price` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPrice._lt != null">
                      AND `project_price` <![CDATA[ < ]]>  #{project_price._lt}
                 </if>
                  <if test="projectPrice._le != null">
                      AND `project_price` <![CDATA[ <= ]]>  #{{project_price._lt}
                 </if>
                  <if test="projectPrice._gt != null">
                      AND `project_price` <![CDATA[ > ]]>  #{{project_price._lt}
                 </if>
                  <if test="projectPrice._ge != null">
                      AND `project_price` <![CDATA[ >= ]]>  #{{project_price._lt}
                 </if>
            </if>
            <if test="projectPackageType != null">
                 <if test="projectPackageType._in != null">
                     AND `project_package_type` in
                     <foreach collection="project_package_type._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._notIn != null">
                     AND `project_package_type`  not in
                     <foreach collection="project_package_type._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._like != null">
                     <foreach collection="project_package_type._like" item="item">
                       AND `project_package_type` like #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._notLike != null">
                     <foreach collection="project_package_type._notLike" item="item">
                       AND `project_package_type` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._regex != null">
                     <foreach collection="project_package_type._regex" item="item">
                       AND `project_package_type` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._regex != null">
                     <foreach collection="project_package_type._regex" item="item">
                       AND `project_package_type` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPackageType._lt != null">
                      AND `project_package_type` <![CDATA[ < ]]>  #{project_package_type._lt}
                 </if>
                  <if test="projectPackageType._le != null">
                      AND `project_package_type` <![CDATA[ <= ]]>  #{{project_package_type._lt}
                 </if>
                  <if test="projectPackageType._gt != null">
                      AND `project_package_type` <![CDATA[ > ]]>  #{{project_package_type._lt}
                 </if>
                  <if test="projectPackageType._ge != null">
                      AND `project_package_type` <![CDATA[ >= ]]>  #{{project_package_type._lt}
                 </if>
            </if>
            <if test="projectPanAddress != null">
                 <if test="projectPanAddress._in != null">
                     AND `project_pan_address` in
                     <foreach collection="project_pan_address._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._notIn != null">
                     AND `project_pan_address`  not in
                     <foreach collection="project_pan_address._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._like != null">
                     <foreach collection="project_pan_address._like" item="item">
                       AND `project_pan_address` like #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._notLike != null">
                     <foreach collection="project_pan_address._notLike" item="item">
                       AND `project_pan_address` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._regex != null">
                     <foreach collection="project_pan_address._regex" item="item">
                       AND `project_pan_address` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._regex != null">
                     <foreach collection="project_pan_address._regex" item="item">
                       AND `project_pan_address` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPanAddress._lt != null">
                      AND `project_pan_address` <![CDATA[ < ]]>  #{project_pan_address._lt}
                 </if>
                  <if test="projectPanAddress._le != null">
                      AND `project_pan_address` <![CDATA[ <= ]]>  #{{project_pan_address._lt}
                 </if>
                  <if test="projectPanAddress._gt != null">
                      AND `project_pan_address` <![CDATA[ > ]]>  #{{project_pan_address._lt}
                 </if>
                  <if test="projectPanAddress._ge != null">
                      AND `project_pan_address` <![CDATA[ >= ]]>  #{{project_pan_address._lt}
                 </if>
            </if>
            <if test="projectHtmlBody != null">
                 <if test="projectHtmlBody._in != null">
                     AND `project_html_body` in
                     <foreach collection="project_html_body._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._notIn != null">
                     AND `project_html_body`  not in
                     <foreach collection="project_html_body._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._like != null">
                     <foreach collection="project_html_body._like" item="item">
                       AND `project_html_body` like #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._notLike != null">
                     <foreach collection="project_html_body._notLike" item="item">
                       AND `project_html_body` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._regex != null">
                     <foreach collection="project_html_body._regex" item="item">
                       AND `project_html_body` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._regex != null">
                     <foreach collection="project_html_body._regex" item="item">
                       AND `project_html_body` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectHtmlBody._lt != null">
                      AND `project_html_body` <![CDATA[ < ]]>  #{project_html_body._lt}
                 </if>
                  <if test="projectHtmlBody._le != null">
                      AND `project_html_body` <![CDATA[ <= ]]>  #{{project_html_body._lt}
                 </if>
                  <if test="projectHtmlBody._gt != null">
                      AND `project_html_body` <![CDATA[ > ]]>  #{{project_html_body._lt}
                 </if>
                  <if test="projectHtmlBody._ge != null">
                      AND `project_html_body` <![CDATA[ >= ]]>  #{{project_html_body._lt}
                 </if>
            </if>
            <if test="projectSourceUrl != null">
                 <if test="projectSourceUrl._in != null">
                     AND `project_source_url` in
                     <foreach collection="project_source_url._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._notIn != null">
                     AND `project_source_url`  not in
                     <foreach collection="project_source_url._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._like != null">
                     <foreach collection="project_source_url._like" item="item">
                       AND `project_source_url` like #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._notLike != null">
                     <foreach collection="project_source_url._notLike" item="item">
                       AND `project_source_url` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._regex != null">
                     <foreach collection="project_source_url._regex" item="item">
                       AND `project_source_url` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._regex != null">
                     <foreach collection="project_source_url._regex" item="item">
                       AND `project_source_url` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSourceUrl._lt != null">
                      AND `project_source_url` <![CDATA[ < ]]>  #{project_source_url._lt}
                 </if>
                  <if test="projectSourceUrl._le != null">
                      AND `project_source_url` <![CDATA[ <= ]]>  #{{project_source_url._lt}
                 </if>
                  <if test="projectSourceUrl._gt != null">
                      AND `project_source_url` <![CDATA[ > ]]>  #{{project_source_url._lt}
                 </if>
                  <if test="projectSourceUrl._ge != null">
                      AND `project_source_url` <![CDATA[ >= ]]>  #{{project_source_url._lt}
                 </if>
            </if>
            <if test="projectLanguage != null">
                 <if test="projectLanguage._in != null">
                     AND `project_language` in
                     <foreach collection="project_language._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._notIn != null">
                     AND `project_language`  not in
                     <foreach collection="project_language._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._like != null">
                     <foreach collection="project_language._like" item="item">
                       AND `project_language` like #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._notLike != null">
                     <foreach collection="project_language._notLike" item="item">
                       AND `project_language` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._regex != null">
                     <foreach collection="project_language._regex" item="item">
                       AND `project_language` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._regex != null">
                     <foreach collection="project_language._regex" item="item">
                       AND `project_language` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectLanguage._lt != null">
                      AND `project_language` <![CDATA[ < ]]>  #{project_language._lt}
                 </if>
                  <if test="projectLanguage._le != null">
                      AND `project_language` <![CDATA[ <= ]]>  #{{project_language._lt}
                 </if>
                  <if test="projectLanguage._gt != null">
                      AND `project_language` <![CDATA[ > ]]>  #{{project_language._lt}
                 </if>
                  <if test="projectLanguage._ge != null">
                      AND `project_language` <![CDATA[ >= ]]>  #{{project_language._lt}
                 </if>
            </if>
            <if test="projectSize2 != null">
                 <if test="projectSize2._in != null">
                     AND `project_size2` in
                     <foreach collection="project_size2._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._notIn != null">
                     AND `project_size2`  not in
                     <foreach collection="project_size2._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._like != null">
                     <foreach collection="project_size2._like" item="item">
                       AND `project_size2` like #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._notLike != null">
                     <foreach collection="project_size2._notLike" item="item">
                       AND `project_size2` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._regex != null">
                     <foreach collection="project_size2._regex" item="item">
                       AND `project_size2` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._regex != null">
                     <foreach collection="project_size2._regex" item="item">
                       AND `project_size2` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSize2._lt != null">
                      AND `project_size2` <![CDATA[ < ]]>  #{project_size2._lt}
                 </if>
                  <if test="projectSize2._le != null">
                      AND `project_size2` <![CDATA[ <= ]]>  #{{project_size2._lt}
                 </if>
                  <if test="projectSize2._gt != null">
                      AND `project_size2` <![CDATA[ > ]]>  #{{project_size2._lt}
                 </if>
                  <if test="projectSize2._ge != null">
                      AND `project_size2` <![CDATA[ >= ]]>  #{{project_size2._lt}
                 </if>
            </if>
            <if test="projectSizeNum != null">
                 <if test="projectSizeNum._in != null">
                     AND `project_size_num` in
                     <foreach collection="project_size_num._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._notIn != null">
                     AND `project_size_num`  not in
                     <foreach collection="project_size_num._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._like != null">
                     <foreach collection="project_size_num._like" item="item">
                       AND `project_size_num` like #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._notLike != null">
                     <foreach collection="project_size_num._notLike" item="item">
                       AND `project_size_num` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._regex != null">
                     <foreach collection="project_size_num._regex" item="item">
                       AND `project_size_num` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._regex != null">
                     <foreach collection="project_size_num._regex" item="item">
                       AND `project_size_num` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeNum._lt != null">
                      AND `project_size_num` <![CDATA[ < ]]>  #{project_size_num._lt}
                 </if>
                  <if test="projectSizeNum._le != null">
                      AND `project_size_num` <![CDATA[ <= ]]>  #{{project_size_num._lt}
                 </if>
                  <if test="projectSizeNum._gt != null">
                      AND `project_size_num` <![CDATA[ > ]]>  #{{project_size_num._lt}
                 </if>
                  <if test="projectSizeNum._ge != null">
                      AND `project_size_num` <![CDATA[ >= ]]>  #{{project_size_num._lt}
                 </if>
            </if>
            <if test="projectSizeType != null">
                 <if test="projectSizeType._in != null">
                     AND `project_size_type` in
                     <foreach collection="project_size_type._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._notIn != null">
                     AND `project_size_type`  not in
                     <foreach collection="project_size_type._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._like != null">
                     <foreach collection="project_size_type._like" item="item">
                       AND `project_size_type` like #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._notLike != null">
                     <foreach collection="project_size_type._notLike" item="item">
                       AND `project_size_type` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._regex != null">
                     <foreach collection="project_size_type._regex" item="item">
                       AND `project_size_type` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._regex != null">
                     <foreach collection="project_size_type._regex" item="item">
                       AND `project_size_type` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSizeType._lt != null">
                      AND `project_size_type` <![CDATA[ < ]]>  #{project_size_type._lt}
                 </if>
                  <if test="projectSizeType._le != null">
                      AND `project_size_type` <![CDATA[ <= ]]>  #{{project_size_type._lt}
                 </if>
                  <if test="projectSizeType._gt != null">
                      AND `project_size_type` <![CDATA[ > ]]>  #{{project_size_type._lt}
                 </if>
                  <if test="projectSizeType._ge != null">
                      AND `project_size_type` <![CDATA[ >= ]]>  #{{project_size_type._lt}
                 </if>
            </if>
            <if test="projectImgs != null">
                 <if test="projectImgs._in != null">
                     AND `project_imgs` in
                     <foreach collection="project_imgs._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._notIn != null">
                     AND `project_imgs`  not in
                     <foreach collection="project_imgs._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._like != null">
                     <foreach collection="project_imgs._like" item="item">
                       AND `project_imgs` like #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._notLike != null">
                     <foreach collection="project_imgs._notLike" item="item">
                       AND `project_imgs` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._regex != null">
                     <foreach collection="project_imgs._regex" item="item">
                       AND `project_imgs` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._regex != null">
                     <foreach collection="project_imgs._regex" item="item">
                       AND `project_imgs` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectImgs._lt != null">
                      AND `project_imgs` <![CDATA[ < ]]>  #{project_imgs._lt}
                 </if>
                  <if test="projectImgs._le != null">
                      AND `project_imgs` <![CDATA[ <= ]]>  #{{project_imgs._lt}
                 </if>
                  <if test="projectImgs._gt != null">
                      AND `project_imgs` <![CDATA[ > ]]>  #{{project_imgs._lt}
                 </if>
                  <if test="projectImgs._ge != null">
                      AND `project_imgs` <![CDATA[ >= ]]>  #{{project_imgs._lt}
                 </if>
            </if>
            <if test="projectImgsDefault != null">
                 <if test="projectImgsDefault._in != null">
                     AND `project_imgs_default` in
                     <foreach collection="project_imgs_default._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._notIn != null">
                     AND `project_imgs_default`  not in
                     <foreach collection="project_imgs_default._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._like != null">
                     <foreach collection="project_imgs_default._like" item="item">
                       AND `project_imgs_default` like #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._notLike != null">
                     <foreach collection="project_imgs_default._notLike" item="item">
                       AND `project_imgs_default` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._regex != null">
                     <foreach collection="project_imgs_default._regex" item="item">
                       AND `project_imgs_default` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._regex != null">
                     <foreach collection="project_imgs_default._regex" item="item">
                       AND `project_imgs_default` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectImgsDefault._lt != null">
                      AND `project_imgs_default` <![CDATA[ < ]]>  #{project_imgs_default._lt}
                 </if>
                  <if test="projectImgsDefault._le != null">
                      AND `project_imgs_default` <![CDATA[ <= ]]>  #{{project_imgs_default._lt}
                 </if>
                  <if test="projectImgsDefault._gt != null">
                      AND `project_imgs_default` <![CDATA[ > ]]>  #{{project_imgs_default._lt}
                 </if>
                  <if test="projectImgsDefault._ge != null">
                      AND `project_imgs_default` <![CDATA[ >= ]]>  #{{project_imgs_default._lt}
                 </if>
            </if>
            <if test="projectRuntime != null">
                 <if test="projectRuntime._in != null">
                     AND `project_runtime` in
                     <foreach collection="project_runtime._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._notIn != null">
                     AND `project_runtime`  not in
                     <foreach collection="project_runtime._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._like != null">
                     <foreach collection="project_runtime._like" item="item">
                       AND `project_runtime` like #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._notLike != null">
                     <foreach collection="project_runtime._notLike" item="item">
                       AND `project_runtime` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._regex != null">
                     <foreach collection="project_runtime._regex" item="item">
                       AND `project_runtime` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._regex != null">
                     <foreach collection="project_runtime._regex" item="item">
                       AND `project_runtime` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectRuntime._lt != null">
                      AND `project_runtime` <![CDATA[ < ]]>  #{project_runtime._lt}
                 </if>
                  <if test="projectRuntime._le != null">
                      AND `project_runtime` <![CDATA[ <= ]]>  #{{project_runtime._lt}
                 </if>
                  <if test="projectRuntime._gt != null">
                      AND `project_runtime` <![CDATA[ > ]]>  #{{project_runtime._lt}
                 </if>
                  <if test="projectRuntime._ge != null">
                      AND `project_runtime` <![CDATA[ >= ]]>  #{{project_runtime._lt}
                 </if>
            </if>
            <if test="projectOfficialWebsite != null">
                 <if test="projectOfficialWebsite._in != null">
                     AND `project_official_website` in
                     <foreach collection="project_official_website._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._notIn != null">
                     AND `project_official_website`  not in
                     <foreach collection="project_official_website._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._like != null">
                     <foreach collection="project_official_website._like" item="item">
                       AND `project_official_website` like #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._notLike != null">
                     <foreach collection="project_official_website._notLike" item="item">
                       AND `project_official_website` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._regex != null">
                     <foreach collection="project_official_website._regex" item="item">
                       AND `project_official_website` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._regex != null">
                     <foreach collection="project_official_website._regex" item="item">
                       AND `project_official_website` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectOfficialWebsite._lt != null">
                      AND `project_official_website` <![CDATA[ < ]]>  #{project_official_website._lt}
                 </if>
                  <if test="projectOfficialWebsite._le != null">
                      AND `project_official_website` <![CDATA[ <= ]]>  #{{project_official_website._lt}
                 </if>
                  <if test="projectOfficialWebsite._gt != null">
                      AND `project_official_website` <![CDATA[ > ]]>  #{{project_official_website._lt}
                 </if>
                  <if test="projectOfficialWebsite._ge != null">
                      AND `project_official_website` <![CDATA[ >= ]]>  #{{project_official_website._lt}
                 </if>
            </if>
            <if test="projectShowWebsite != null">
                 <if test="projectShowWebsite._in != null">
                     AND `project_show_website` in
                     <foreach collection="project_show_website._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._notIn != null">
                     AND `project_show_website`  not in
                     <foreach collection="project_show_website._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._like != null">
                     <foreach collection="project_show_website._like" item="item">
                       AND `project_show_website` like #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._notLike != null">
                     <foreach collection="project_show_website._notLike" item="item">
                       AND `project_show_website` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._regex != null">
                     <foreach collection="project_show_website._regex" item="item">
                       AND `project_show_website` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._regex != null">
                     <foreach collection="project_show_website._regex" item="item">
                       AND `project_show_website` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectShowWebsite._lt != null">
                      AND `project_show_website` <![CDATA[ < ]]>  #{project_show_website._lt}
                 </if>
                  <if test="projectShowWebsite._le != null">
                      AND `project_show_website` <![CDATA[ <= ]]>  #{{project_show_website._lt}
                 </if>
                  <if test="projectShowWebsite._gt != null">
                      AND `project_show_website` <![CDATA[ > ]]>  #{{project_show_website._lt}
                 </if>
                  <if test="projectShowWebsite._ge != null">
                      AND `project_show_website` <![CDATA[ >= ]]>  #{{project_show_website._lt}
                 </if>
            </if>
            <if test="projectDownloadUrls != null">
                 <if test="projectDownloadUrls._in != null">
                     AND `project_download_urls` in
                     <foreach collection="project_download_urls._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._notIn != null">
                     AND `project_download_urls`  not in
                     <foreach collection="project_download_urls._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._like != null">
                     <foreach collection="project_download_urls._like" item="item">
                       AND `project_download_urls` like #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._notLike != null">
                     <foreach collection="project_download_urls._notLike" item="item">
                       AND `project_download_urls` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._regex != null">
                     <foreach collection="project_download_urls._regex" item="item">
                       AND `project_download_urls` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._regex != null">
                     <foreach collection="project_download_urls._regex" item="item">
                       AND `project_download_urls` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadUrls._lt != null">
                      AND `project_download_urls` <![CDATA[ < ]]>  #{project_download_urls._lt}
                 </if>
                  <if test="projectDownloadUrls._le != null">
                      AND `project_download_urls` <![CDATA[ <= ]]>  #{{project_download_urls._lt}
                 </if>
                  <if test="projectDownloadUrls._gt != null">
                      AND `project_download_urls` <![CDATA[ > ]]>  #{{project_download_urls._lt}
                 </if>
                  <if test="projectDownloadUrls._ge != null">
                      AND `project_download_urls` <![CDATA[ >= ]]>  #{{project_download_urls._lt}
                 </if>
            </if>
            <if test="projectDownloadSum != null">
                 <if test="projectDownloadSum._in != null">
                     AND `project_download_sum` in
                     <foreach collection="project_download_sum._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._notIn != null">
                     AND `project_download_sum`  not in
                     <foreach collection="project_download_sum._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._like != null">
                     <foreach collection="project_download_sum._like" item="item">
                       AND `project_download_sum` like #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._notLike != null">
                     <foreach collection="project_download_sum._notLike" item="item">
                       AND `project_download_sum` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._regex != null">
                     <foreach collection="project_download_sum._regex" item="item">
                       AND `project_download_sum` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._regex != null">
                     <foreach collection="project_download_sum._regex" item="item">
                       AND `project_download_sum` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectDownloadSum._lt != null">
                      AND `project_download_sum` <![CDATA[ < ]]>  #{project_download_sum._lt}
                 </if>
                  <if test="projectDownloadSum._le != null">
                      AND `project_download_sum` <![CDATA[ <= ]]>  #{{project_download_sum._lt}
                 </if>
                  <if test="projectDownloadSum._gt != null">
                      AND `project_download_sum` <![CDATA[ > ]]>  #{{project_download_sum._lt}
                 </if>
                  <if test="projectDownloadSum._ge != null">
                      AND `project_download_sum` <![CDATA[ >= ]]>  #{{project_download_sum._lt}
                 </if>
            </if>
            <if test="projectIntroduction != null">
                 <if test="projectIntroduction._in != null">
                     AND `project_introduction` in
                     <foreach collection="project_introduction._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._notIn != null">
                     AND `project_introduction`  not in
                     <foreach collection="project_introduction._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._like != null">
                     <foreach collection="project_introduction._like" item="item">
                       AND `project_introduction` like #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._notLike != null">
                     <foreach collection="project_introduction._notLike" item="item">
                       AND `project_introduction` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._regex != null">
                     <foreach collection="project_introduction._regex" item="item">
                       AND `project_introduction` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._regex != null">
                     <foreach collection="project_introduction._regex" item="item">
                       AND `project_introduction` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectIntroduction._lt != null">
                      AND `project_introduction` <![CDATA[ < ]]>  #{project_introduction._lt}
                 </if>
                  <if test="projectIntroduction._le != null">
                      AND `project_introduction` <![CDATA[ <= ]]>  #{{project_introduction._lt}
                 </if>
                  <if test="projectIntroduction._gt != null">
                      AND `project_introduction` <![CDATA[ > ]]>  #{{project_introduction._lt}
                 </if>
                  <if test="projectIntroduction._ge != null">
                      AND `project_introduction` <![CDATA[ >= ]]>  #{{project_introduction._lt}
                 </if>
            </if>
            <if test="projectStatus != null">
                 <if test="projectStatus._in != null">
                     AND `project_status` in
                     <foreach collection="project_status._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._notIn != null">
                     AND `project_status`  not in
                     <foreach collection="project_status._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._like != null">
                     <foreach collection="project_status._like" item="item">
                       AND `project_status` like #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._notLike != null">
                     <foreach collection="project_status._notLike" item="item">
                       AND `project_status` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._regex != null">
                     <foreach collection="project_status._regex" item="item">
                       AND `project_status` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._regex != null">
                     <foreach collection="project_status._regex" item="item">
                       AND `project_status` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectStatus._lt != null">
                      AND `project_status` <![CDATA[ < ]]>  #{project_status._lt}
                 </if>
                  <if test="projectStatus._le != null">
                      AND `project_status` <![CDATA[ <= ]]>  #{{project_status._lt}
                 </if>
                  <if test="projectStatus._gt != null">
                      AND `project_status` <![CDATA[ > ]]>  #{{project_status._lt}
                 </if>
                  <if test="projectStatus._ge != null">
                      AND `project_status` <![CDATA[ >= ]]>  #{{project_status._lt}
                 </if>
            </if>
            <if test="projectMark != null">
                 <if test="projectMark._in != null">
                     AND `project_mark` in
                     <foreach collection="project_mark._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._notIn != null">
                     AND `project_mark`  not in
                     <foreach collection="project_mark._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._like != null">
                     <foreach collection="project_mark._like" item="item">
                       AND `project_mark` like #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._notLike != null">
                     <foreach collection="project_mark._notLike" item="item">
                       AND `project_mark` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._regex != null">
                     <foreach collection="project_mark._regex" item="item">
                       AND `project_mark` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._regex != null">
                     <foreach collection="project_mark._regex" item="item">
                       AND `project_mark` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectMark._lt != null">
                      AND `project_mark` <![CDATA[ < ]]>  #{project_mark._lt}
                 </if>
                  <if test="projectMark._le != null">
                      AND `project_mark` <![CDATA[ <= ]]>  #{{project_mark._lt}
                 </if>
                  <if test="projectMark._gt != null">
                      AND `project_mark` <![CDATA[ > ]]>  #{{project_mark._lt}
                 </if>
                  <if test="projectMark._ge != null">
                      AND `project_mark` <![CDATA[ >= ]]>  #{{project_mark._lt}
                 </if>
            </if>
            <if test="projectCanRunning != null">
                 <if test="projectCanRunning._in != null">
                     AND `project_can_running` in
                     <foreach collection="project_can_running._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._notIn != null">
                     AND `project_can_running`  not in
                     <foreach collection="project_can_running._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._like != null">
                     <foreach collection="project_can_running._like" item="item">
                       AND `project_can_running` like #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._notLike != null">
                     <foreach collection="project_can_running._notLike" item="item">
                       AND `project_can_running` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._regex != null">
                     <foreach collection="project_can_running._regex" item="item">
                       AND `project_can_running` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._regex != null">
                     <foreach collection="project_can_running._regex" item="item">
                       AND `project_can_running` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectCanRunning._lt != null">
                      AND `project_can_running` <![CDATA[ < ]]>  #{project_can_running._lt}
                 </if>
                  <if test="projectCanRunning._le != null">
                      AND `project_can_running` <![CDATA[ <= ]]>  #{{project_can_running._lt}
                 </if>
                  <if test="projectCanRunning._gt != null">
                      AND `project_can_running` <![CDATA[ > ]]>  #{{project_can_running._lt}
                 </if>
                  <if test="projectCanRunning._ge != null">
                      AND `project_can_running` <![CDATA[ >= ]]>  #{{project_can_running._lt}
                 </if>
            </if>
            <if test="projectSql != null">
                 <if test="projectSql._in != null">
                     AND `project_sql` in
                     <foreach collection="project_sql._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._notIn != null">
                     AND `project_sql`  not in
                     <foreach collection="project_sql._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._like != null">
                     <foreach collection="project_sql._like" item="item">
                       AND `project_sql` like #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._notLike != null">
                     <foreach collection="project_sql._notLike" item="item">
                       AND `project_sql` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._regex != null">
                     <foreach collection="project_sql._regex" item="item">
                       AND `project_sql` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._regex != null">
                     <foreach collection="project_sql._regex" item="item">
                       AND `project_sql` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectSql._lt != null">
                      AND `project_sql` <![CDATA[ < ]]>  #{project_sql._lt}
                 </if>
                  <if test="projectSql._le != null">
                      AND `project_sql` <![CDATA[ <= ]]>  #{{project_sql._lt}
                 </if>
                  <if test="projectSql._gt != null">
                      AND `project_sql` <![CDATA[ > ]]>  #{{project_sql._lt}
                 </if>
                  <if test="projectSql._ge != null">
                      AND `project_sql` <![CDATA[ >= ]]>  #{{project_sql._lt}
                 </if>
            </if>
            <if test="projectPort != null">
                 <if test="projectPort._in != null">
                     AND `project_port` in
                     <foreach collection="project_port._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._notIn != null">
                     AND `project_port`  not in
                     <foreach collection="project_port._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._like != null">
                     <foreach collection="project_port._like" item="item">
                       AND `project_port` like #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._notLike != null">
                     <foreach collection="project_port._notLike" item="item">
                       AND `project_port` not like #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._regex != null">
                     <foreach collection="project_port._regex" item="item">
                       AND `project_port` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._regex != null">
                     <foreach collection="project_port._regex" item="item">
                       AND `project_port` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="projectPort._lt != null">
                      AND `project_port` <![CDATA[ < ]]>  #{project_port._lt}
                 </if>
                  <if test="projectPort._le != null">
                      AND `project_port` <![CDATA[ <= ]]>  #{{project_port._lt}
                 </if>
                  <if test="projectPort._gt != null">
                      AND `project_port` <![CDATA[ > ]]>  #{{project_port._lt}
                 </if>
                  <if test="projectPort._ge != null">
                      AND `project_port` <![CDATA[ >= ]]>  #{{project_port._lt}
                 </if>
            </if>
            <if test="addressContainerOuter != null">
                 <if test="addressContainerOuter._in != null">
                     AND `address_container_outer` in
                     <foreach collection="address_container_outer._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._notIn != null">
                     AND `address_container_outer`  not in
                     <foreach collection="address_container_outer._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._like != null">
                     <foreach collection="address_container_outer._like" item="item">
                       AND `address_container_outer` like #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._notLike != null">
                     <foreach collection="address_container_outer._notLike" item="item">
                       AND `address_container_outer` not like #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._regex != null">
                     <foreach collection="address_container_outer._regex" item="item">
                       AND `address_container_outer` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._regex != null">
                     <foreach collection="address_container_outer._regex" item="item">
                       AND `address_container_outer` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerOuter._lt != null">
                      AND `address_container_outer` <![CDATA[ < ]]>  #{address_container_outer._lt}
                 </if>
                  <if test="addressContainerOuter._le != null">
                      AND `address_container_outer` <![CDATA[ <= ]]>  #{{address_container_outer._lt}
                 </if>
                  <if test="addressContainerOuter._gt != null">
                      AND `address_container_outer` <![CDATA[ > ]]>  #{{address_container_outer._lt}
                 </if>
                  <if test="addressContainerOuter._ge != null">
                      AND `address_container_outer` <![CDATA[ >= ]]>  #{{address_container_outer._lt}
                 </if>
            </if>
            <if test="addressContainerInner != null">
                 <if test="addressContainerInner._in != null">
                     AND `address_container_inner` in
                     <foreach collection="address_container_inner._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._notIn != null">
                     AND `address_container_inner`  not in
                     <foreach collection="address_container_inner._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._like != null">
                     <foreach collection="address_container_inner._like" item="item">
                       AND `address_container_inner` like #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._notLike != null">
                     <foreach collection="address_container_inner._notLike" item="item">
                       AND `address_container_inner` not like #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._regex != null">
                     <foreach collection="address_container_inner._regex" item="item">
                       AND `address_container_inner` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._regex != null">
                     <foreach collection="address_container_inner._regex" item="item">
                       AND `address_container_inner` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressContainerInner._lt != null">
                      AND `address_container_inner` <![CDATA[ < ]]>  #{address_container_inner._lt}
                 </if>
                  <if test="addressContainerInner._le != null">
                      AND `address_container_inner` <![CDATA[ <= ]]>  #{{address_container_inner._lt}
                 </if>
                  <if test="addressContainerInner._gt != null">
                      AND `address_container_inner` <![CDATA[ > ]]>  #{{address_container_inner._lt}
                 </if>
                  <if test="addressContainerInner._ge != null">
                      AND `address_container_inner` <![CDATA[ >= ]]>  #{{address_container_inner._lt}
                 </if>
            </if>
            <if test="addressProjectFront != null">
                 <if test="addressProjectFront._in != null">
                     AND `address_project_front` in
                     <foreach collection="address_project_front._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._notIn != null">
                     AND `address_project_front`  not in
                     <foreach collection="address_project_front._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._like != null">
                     <foreach collection="address_project_front._like" item="item">
                       AND `address_project_front` like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._notLike != null">
                     <foreach collection="address_project_front._notLike" item="item">
                       AND `address_project_front` not like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._regex != null">
                     <foreach collection="address_project_front._regex" item="item">
                       AND `address_project_front` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._regex != null">
                     <foreach collection="address_project_front._regex" item="item">
                       AND `address_project_front` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectFront._lt != null">
                      AND `address_project_front` <![CDATA[ < ]]>  #{address_project_front._lt}
                 </if>
                  <if test="addressProjectFront._le != null">
                      AND `address_project_front` <![CDATA[ <= ]]>  #{{address_project_front._lt}
                 </if>
                  <if test="addressProjectFront._gt != null">
                      AND `address_project_front` <![CDATA[ > ]]>  #{{address_project_front._lt}
                 </if>
                  <if test="addressProjectFront._ge != null">
                      AND `address_project_front` <![CDATA[ >= ]]>  #{{address_project_front._lt}
                 </if>
            </if>
            <if test="addressProjectBackground != null">
                 <if test="addressProjectBackground._in != null">
                     AND `address_project_background` in
                     <foreach collection="address_project_background._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._notIn != null">
                     AND `address_project_background`  not in
                     <foreach collection="address_project_background._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._like != null">
                     <foreach collection="address_project_background._like" item="item">
                       AND `address_project_background` like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._notLike != null">
                     <foreach collection="address_project_background._notLike" item="item">
                       AND `address_project_background` not like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._regex != null">
                     <foreach collection="address_project_background._regex" item="item">
                       AND `address_project_background` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._regex != null">
                     <foreach collection="address_project_background._regex" item="item">
                       AND `address_project_background` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackground._lt != null">
                      AND `address_project_background` <![CDATA[ < ]]>  #{address_project_background._lt}
                 </if>
                  <if test="addressProjectBackground._le != null">
                      AND `address_project_background` <![CDATA[ <= ]]>  #{{address_project_background._lt}
                 </if>
                  <if test="addressProjectBackground._gt != null">
                      AND `address_project_background` <![CDATA[ > ]]>  #{{address_project_background._lt}
                 </if>
                  <if test="addressProjectBackground._ge != null">
                      AND `address_project_background` <![CDATA[ >= ]]>  #{{address_project_background._lt}
                 </if>
            </if>
            <if test="addressProjectBackgroundAccountPasswd != null">
                 <if test="addressProjectBackgroundAccountPasswd._in != null">
                     AND `address_project_background_account_passwd` in
                     <foreach collection="address_project_background_account_passwd._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._notIn != null">
                     AND `address_project_background_account_passwd`  not in
                     <foreach collection="address_project_background_account_passwd._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._like != null">
                     <foreach collection="address_project_background_account_passwd._like" item="item">
                       AND `address_project_background_account_passwd` like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._notLike != null">
                     <foreach collection="address_project_background_account_passwd._notLike" item="item">
                       AND `address_project_background_account_passwd` not like #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._regex != null">
                     <foreach collection="address_project_background_account_passwd._regex" item="item">
                       AND `address_project_background_account_passwd` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._regex != null">
                     <foreach collection="address_project_background_account_passwd._regex" item="item">
                       AND `address_project_background_account_passwd` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="addressProjectBackgroundAccountPasswd._lt != null">
                      AND `address_project_background_account_passwd` <![CDATA[ < ]]>  #{address_project_background_account_passwd._lt}
                 </if>
                  <if test="addressProjectBackgroundAccountPasswd._le != null">
                      AND `address_project_background_account_passwd` <![CDATA[ <= ]]>  #{{address_project_background_account_passwd._lt}
                 </if>
                  <if test="addressProjectBackgroundAccountPasswd._gt != null">
                      AND `address_project_background_account_passwd` <![CDATA[ > ]]>  #{{address_project_background_account_passwd._lt}
                 </if>
                  <if test="addressProjectBackgroundAccountPasswd._ge != null">
                      AND `address_project_background_account_passwd` <![CDATA[ >= ]]>  #{{address_project_background_account_passwd._lt}
                 </if>
            </if>
            <if test="devProjectRealFileName != null">
                 <if test="devProjectRealFileName._in != null">
                     AND `dev_project_real_file_name` in
                     <foreach collection="dev_project_real_file_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._notIn != null">
                     AND `dev_project_real_file_name`  not in
                     <foreach collection="dev_project_real_file_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._like != null">
                     <foreach collection="dev_project_real_file_name._like" item="item">
                       AND `dev_project_real_file_name` like #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._notLike != null">
                     <foreach collection="dev_project_real_file_name._notLike" item="item">
                       AND `dev_project_real_file_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._regex != null">
                     <foreach collection="dev_project_real_file_name._regex" item="item">
                       AND `dev_project_real_file_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._regex != null">
                     <foreach collection="dev_project_real_file_name._regex" item="item">
                       AND `dev_project_real_file_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devProjectRealFileName._lt != null">
                      AND `dev_project_real_file_name` <![CDATA[ < ]]>  #{dev_project_real_file_name._lt}
                 </if>
                  <if test="devProjectRealFileName._le != null">
                      AND `dev_project_real_file_name` <![CDATA[ <= ]]>  #{{dev_project_real_file_name._lt}
                 </if>
                  <if test="devProjectRealFileName._gt != null">
                      AND `dev_project_real_file_name` <![CDATA[ > ]]>  #{{dev_project_real_file_name._lt}
                 </if>
                  <if test="devProjectRealFileName._ge != null">
                      AND `dev_project_real_file_name` <![CDATA[ >= ]]>  #{{dev_project_real_file_name._lt}
                 </if>
            </if>
            <if test="devDockerImageName != null">
                 <if test="devDockerImageName._in != null">
                     AND `dev_docker_image_name` in
                     <foreach collection="dev_docker_image_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._notIn != null">
                     AND `dev_docker_image_name`  not in
                     <foreach collection="dev_docker_image_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._like != null">
                     <foreach collection="dev_docker_image_name._like" item="item">
                       AND `dev_docker_image_name` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._notLike != null">
                     <foreach collection="dev_docker_image_name._notLike" item="item">
                       AND `dev_docker_image_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._regex != null">
                     <foreach collection="dev_docker_image_name._regex" item="item">
                       AND `dev_docker_image_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._regex != null">
                     <foreach collection="dev_docker_image_name._regex" item="item">
                       AND `dev_docker_image_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageName._lt != null">
                      AND `dev_docker_image_name` <![CDATA[ < ]]>  #{dev_docker_image_name._lt}
                 </if>
                  <if test="devDockerImageName._le != null">
                      AND `dev_docker_image_name` <![CDATA[ <= ]]>  #{{dev_docker_image_name._lt}
                 </if>
                  <if test="devDockerImageName._gt != null">
                      AND `dev_docker_image_name` <![CDATA[ > ]]>  #{{dev_docker_image_name._lt}
                 </if>
                  <if test="devDockerImageName._ge != null">
                      AND `dev_docker_image_name` <![CDATA[ >= ]]>  #{{dev_docker_image_name._lt}
                 </if>
            </if>
            <if test="devDockerImageShellRemove != null">
                 <if test="devDockerImageShellRemove._in != null">
                     AND `dev_docker_image_shell_remove` in
                     <foreach collection="dev_docker_image_shell_remove._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._notIn != null">
                     AND `dev_docker_image_shell_remove`  not in
                     <foreach collection="dev_docker_image_shell_remove._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._like != null">
                     <foreach collection="dev_docker_image_shell_remove._like" item="item">
                       AND `dev_docker_image_shell_remove` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._notLike != null">
                     <foreach collection="dev_docker_image_shell_remove._notLike" item="item">
                       AND `dev_docker_image_shell_remove` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._regex != null">
                     <foreach collection="dev_docker_image_shell_remove._regex" item="item">
                       AND `dev_docker_image_shell_remove` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._regex != null">
                     <foreach collection="dev_docker_image_shell_remove._regex" item="item">
                       AND `dev_docker_image_shell_remove` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerImageShellRemove._lt != null">
                      AND `dev_docker_image_shell_remove` <![CDATA[ < ]]>  #{dev_docker_image_shell_remove._lt}
                 </if>
                  <if test="devDockerImageShellRemove._le != null">
                      AND `dev_docker_image_shell_remove` <![CDATA[ <= ]]>  #{{dev_docker_image_shell_remove._lt}
                 </if>
                  <if test="devDockerImageShellRemove._gt != null">
                      AND `dev_docker_image_shell_remove` <![CDATA[ > ]]>  #{{dev_docker_image_shell_remove._lt}
                 </if>
                  <if test="devDockerImageShellRemove._ge != null">
                      AND `dev_docker_image_shell_remove` <![CDATA[ >= ]]>  #{{dev_docker_image_shell_remove._lt}
                 </if>
            </if>
            <if test="devDockerContainerId != null">
                 <if test="devDockerContainerId._in != null">
                     AND `dev_docker_container_id` in
                     <foreach collection="dev_docker_container_id._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._notIn != null">
                     AND `dev_docker_container_id`  not in
                     <foreach collection="dev_docker_container_id._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._like != null">
                     <foreach collection="dev_docker_container_id._like" item="item">
                       AND `dev_docker_container_id` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._notLike != null">
                     <foreach collection="dev_docker_container_id._notLike" item="item">
                       AND `dev_docker_container_id` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._regex != null">
                     <foreach collection="dev_docker_container_id._regex" item="item">
                       AND `dev_docker_container_id` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._regex != null">
                     <foreach collection="dev_docker_container_id._regex" item="item">
                       AND `dev_docker_container_id` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerId._lt != null">
                      AND `dev_docker_container_id` <![CDATA[ < ]]>  #{dev_docker_container_id._lt}
                 </if>
                  <if test="devDockerContainerId._le != null">
                      AND `dev_docker_container_id` <![CDATA[ <= ]]>  #{{dev_docker_container_id._lt}
                 </if>
                  <if test="devDockerContainerId._gt != null">
                      AND `dev_docker_container_id` <![CDATA[ > ]]>  #{{dev_docker_container_id._lt}
                 </if>
                  <if test="devDockerContainerId._ge != null">
                      AND `dev_docker_container_id` <![CDATA[ >= ]]>  #{{dev_docker_container_id._lt}
                 </if>
            </if>
            <if test="devDockerContainerName != null">
                 <if test="devDockerContainerName._in != null">
                     AND `dev_docker_container_name` in
                     <foreach collection="dev_docker_container_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._notIn != null">
                     AND `dev_docker_container_name`  not in
                     <foreach collection="dev_docker_container_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._like != null">
                     <foreach collection="dev_docker_container_name._like" item="item">
                       AND `dev_docker_container_name` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._notLike != null">
                     <foreach collection="dev_docker_container_name._notLike" item="item">
                       AND `dev_docker_container_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._regex != null">
                     <foreach collection="dev_docker_container_name._regex" item="item">
                       AND `dev_docker_container_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._regex != null">
                     <foreach collection="dev_docker_container_name._regex" item="item">
                       AND `dev_docker_container_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerName._lt != null">
                      AND `dev_docker_container_name` <![CDATA[ < ]]>  #{dev_docker_container_name._lt}
                 </if>
                  <if test="devDockerContainerName._le != null">
                      AND `dev_docker_container_name` <![CDATA[ <= ]]>  #{{dev_docker_container_name._lt}
                 </if>
                  <if test="devDockerContainerName._gt != null">
                      AND `dev_docker_container_name` <![CDATA[ > ]]>  #{{dev_docker_container_name._lt}
                 </if>
                  <if test="devDockerContainerName._ge != null">
                      AND `dev_docker_container_name` <![CDATA[ >= ]]>  #{{dev_docker_container_name._lt}
                 </if>
            </if>
            <if test="devDockerContainerShellCreate != null">
                 <if test="devDockerContainerShellCreate._in != null">
                     AND `dev_docker_container_shell_create` in
                     <foreach collection="dev_docker_container_shell_create._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._notIn != null">
                     AND `dev_docker_container_shell_create`  not in
                     <foreach collection="dev_docker_container_shell_create._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._like != null">
                     <foreach collection="dev_docker_container_shell_create._like" item="item">
                       AND `dev_docker_container_shell_create` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._notLike != null">
                     <foreach collection="dev_docker_container_shell_create._notLike" item="item">
                       AND `dev_docker_container_shell_create` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._regex != null">
                     <foreach collection="dev_docker_container_shell_create._regex" item="item">
                       AND `dev_docker_container_shell_create` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._regex != null">
                     <foreach collection="dev_docker_container_shell_create._regex" item="item">
                       AND `dev_docker_container_shell_create` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellCreate._lt != null">
                      AND `dev_docker_container_shell_create` <![CDATA[ < ]]>  #{dev_docker_container_shell_create._lt}
                 </if>
                  <if test="devDockerContainerShellCreate._le != null">
                      AND `dev_docker_container_shell_create` <![CDATA[ <= ]]>  #{{dev_docker_container_shell_create._lt}
                 </if>
                  <if test="devDockerContainerShellCreate._gt != null">
                      AND `dev_docker_container_shell_create` <![CDATA[ > ]]>  #{{dev_docker_container_shell_create._lt}
                 </if>
                  <if test="devDockerContainerShellCreate._ge != null">
                      AND `dev_docker_container_shell_create` <![CDATA[ >= ]]>  #{{dev_docker_container_shell_create._lt}
                 </if>
            </if>
            <if test="devDockerContainerShellRun != null">
                 <if test="devDockerContainerShellRun._in != null">
                     AND `dev_docker_container_shell_run` in
                     <foreach collection="dev_docker_container_shell_run._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._notIn != null">
                     AND `dev_docker_container_shell_run`  not in
                     <foreach collection="dev_docker_container_shell_run._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._like != null">
                     <foreach collection="dev_docker_container_shell_run._like" item="item">
                       AND `dev_docker_container_shell_run` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._notLike != null">
                     <foreach collection="dev_docker_container_shell_run._notLike" item="item">
                       AND `dev_docker_container_shell_run` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._regex != null">
                     <foreach collection="dev_docker_container_shell_run._regex" item="item">
                       AND `dev_docker_container_shell_run` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._regex != null">
                     <foreach collection="dev_docker_container_shell_run._regex" item="item">
                       AND `dev_docker_container_shell_run` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRun._lt != null">
                      AND `dev_docker_container_shell_run` <![CDATA[ < ]]>  #{dev_docker_container_shell_run._lt}
                 </if>
                  <if test="devDockerContainerShellRun._le != null">
                      AND `dev_docker_container_shell_run` <![CDATA[ <= ]]>  #{{dev_docker_container_shell_run._lt}
                 </if>
                  <if test="devDockerContainerShellRun._gt != null">
                      AND `dev_docker_container_shell_run` <![CDATA[ > ]]>  #{{dev_docker_container_shell_run._lt}
                 </if>
                  <if test="devDockerContainerShellRun._ge != null">
                      AND `dev_docker_container_shell_run` <![CDATA[ >= ]]>  #{{dev_docker_container_shell_run._lt}
                 </if>
            </if>
            <if test="devDockerContainerShellStop != null">
                 <if test="devDockerContainerShellStop._in != null">
                     AND `dev_docker_container_shell_stop` in
                     <foreach collection="dev_docker_container_shell_stop._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._notIn != null">
                     AND `dev_docker_container_shell_stop`  not in
                     <foreach collection="dev_docker_container_shell_stop._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._like != null">
                     <foreach collection="dev_docker_container_shell_stop._like" item="item">
                       AND `dev_docker_container_shell_stop` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._notLike != null">
                     <foreach collection="dev_docker_container_shell_stop._notLike" item="item">
                       AND `dev_docker_container_shell_stop` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._regex != null">
                     <foreach collection="dev_docker_container_shell_stop._regex" item="item">
                       AND `dev_docker_container_shell_stop` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._regex != null">
                     <foreach collection="dev_docker_container_shell_stop._regex" item="item">
                       AND `dev_docker_container_shell_stop` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellStop._lt != null">
                      AND `dev_docker_container_shell_stop` <![CDATA[ < ]]>  #{dev_docker_container_shell_stop._lt}
                 </if>
                  <if test="devDockerContainerShellStop._le != null">
                      AND `dev_docker_container_shell_stop` <![CDATA[ <= ]]>  #{{dev_docker_container_shell_stop._lt}
                 </if>
                  <if test="devDockerContainerShellStop._gt != null">
                      AND `dev_docker_container_shell_stop` <![CDATA[ > ]]>  #{{dev_docker_container_shell_stop._lt}
                 </if>
                  <if test="devDockerContainerShellStop._ge != null">
                      AND `dev_docker_container_shell_stop` <![CDATA[ >= ]]>  #{{dev_docker_container_shell_stop._lt}
                 </if>
            </if>
            <if test="devDockerContainerShellRemove != null">
                 <if test="devDockerContainerShellRemove._in != null">
                     AND `dev_docker_container_shell_remove` in
                     <foreach collection="dev_docker_container_shell_remove._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._notIn != null">
                     AND `dev_docker_container_shell_remove`  not in
                     <foreach collection="dev_docker_container_shell_remove._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._like != null">
                     <foreach collection="dev_docker_container_shell_remove._like" item="item">
                       AND `dev_docker_container_shell_remove` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._notLike != null">
                     <foreach collection="dev_docker_container_shell_remove._notLike" item="item">
                       AND `dev_docker_container_shell_remove` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._regex != null">
                     <foreach collection="dev_docker_container_shell_remove._regex" item="item">
                       AND `dev_docker_container_shell_remove` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._regex != null">
                     <foreach collection="dev_docker_container_shell_remove._regex" item="item">
                       AND `dev_docker_container_shell_remove` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerContainerShellRemove._lt != null">
                      AND `dev_docker_container_shell_remove` <![CDATA[ < ]]>  #{dev_docker_container_shell_remove._lt}
                 </if>
                  <if test="devDockerContainerShellRemove._le != null">
                      AND `dev_docker_container_shell_remove` <![CDATA[ <= ]]>  #{{dev_docker_container_shell_remove._lt}
                 </if>
                  <if test="devDockerContainerShellRemove._gt != null">
                      AND `dev_docker_container_shell_remove` <![CDATA[ > ]]>  #{{dev_docker_container_shell_remove._lt}
                 </if>
                  <if test="devDockerContainerShellRemove._ge != null">
                      AND `dev_docker_container_shell_remove` <![CDATA[ >= ]]>  #{{dev_docker_container_shell_remove._lt}
                 </if>
            </if>
            <if test="devDockerStatusImagesIsExist != null">
                 <if test="devDockerStatusImagesIsExist._in != null">
                     AND `dev_docker_status_images_is_exist` in
                     <foreach collection="dev_docker_status_images_is_exist._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._notIn != null">
                     AND `dev_docker_status_images_is_exist`  not in
                     <foreach collection="dev_docker_status_images_is_exist._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._like != null">
                     <foreach collection="dev_docker_status_images_is_exist._like" item="item">
                       AND `dev_docker_status_images_is_exist` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._notLike != null">
                     <foreach collection="dev_docker_status_images_is_exist._notLike" item="item">
                       AND `dev_docker_status_images_is_exist` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._regex != null">
                     <foreach collection="dev_docker_status_images_is_exist._regex" item="item">
                       AND `dev_docker_status_images_is_exist` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._regex != null">
                     <foreach collection="dev_docker_status_images_is_exist._regex" item="item">
                       AND `dev_docker_status_images_is_exist` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusImagesIsExist._lt != null">
                      AND `dev_docker_status_images_is_exist` <![CDATA[ < ]]>  #{dev_docker_status_images_is_exist._lt}
                 </if>
                  <if test="devDockerStatusImagesIsExist._le != null">
                      AND `dev_docker_status_images_is_exist` <![CDATA[ <= ]]>  #{{dev_docker_status_images_is_exist._lt}
                 </if>
                  <if test="devDockerStatusImagesIsExist._gt != null">
                      AND `dev_docker_status_images_is_exist` <![CDATA[ > ]]>  #{{dev_docker_status_images_is_exist._lt}
                 </if>
                  <if test="devDockerStatusImagesIsExist._ge != null">
                      AND `dev_docker_status_images_is_exist` <![CDATA[ >= ]]>  #{{dev_docker_status_images_is_exist._lt}
                 </if>
            </if>
            <if test="devDockerStatusContainerIsExist != null">
                 <if test="devDockerStatusContainerIsExist._in != null">
                     AND `dev_docker_status_container_is_exist` in
                     <foreach collection="dev_docker_status_container_is_exist._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._notIn != null">
                     AND `dev_docker_status_container_is_exist`  not in
                     <foreach collection="dev_docker_status_container_is_exist._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._like != null">
                     <foreach collection="dev_docker_status_container_is_exist._like" item="item">
                       AND `dev_docker_status_container_is_exist` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._notLike != null">
                     <foreach collection="dev_docker_status_container_is_exist._notLike" item="item">
                       AND `dev_docker_status_container_is_exist` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._regex != null">
                     <foreach collection="dev_docker_status_container_is_exist._regex" item="item">
                       AND `dev_docker_status_container_is_exist` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._regex != null">
                     <foreach collection="dev_docker_status_container_is_exist._regex" item="item">
                       AND `dev_docker_status_container_is_exist` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsExist._lt != null">
                      AND `dev_docker_status_container_is_exist` <![CDATA[ < ]]>  #{dev_docker_status_container_is_exist._lt}
                 </if>
                  <if test="devDockerStatusContainerIsExist._le != null">
                      AND `dev_docker_status_container_is_exist` <![CDATA[ <= ]]>  #{{dev_docker_status_container_is_exist._lt}
                 </if>
                  <if test="devDockerStatusContainerIsExist._gt != null">
                      AND `dev_docker_status_container_is_exist` <![CDATA[ > ]]>  #{{dev_docker_status_container_is_exist._lt}
                 </if>
                  <if test="devDockerStatusContainerIsExist._ge != null">
                      AND `dev_docker_status_container_is_exist` <![CDATA[ >= ]]>  #{{dev_docker_status_container_is_exist._lt}
                 </if>
            </if>
            <if test="devDockerStatusContainerIsRunning != null">
                 <if test="devDockerStatusContainerIsRunning._in != null">
                     AND `dev_docker_status_container_is_running` in
                     <foreach collection="dev_docker_status_container_is_running._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._notIn != null">
                     AND `dev_docker_status_container_is_running`  not in
                     <foreach collection="dev_docker_status_container_is_running._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._like != null">
                     <foreach collection="dev_docker_status_container_is_running._like" item="item">
                       AND `dev_docker_status_container_is_running` like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._notLike != null">
                     <foreach collection="dev_docker_status_container_is_running._notLike" item="item">
                       AND `dev_docker_status_container_is_running` not like #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._regex != null">
                     <foreach collection="dev_docker_status_container_is_running._regex" item="item">
                       AND `dev_docker_status_container_is_running` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._regex != null">
                     <foreach collection="dev_docker_status_container_is_running._regex" item="item">
                       AND `dev_docker_status_container_is_running` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="devDockerStatusContainerIsRunning._lt != null">
                      AND `dev_docker_status_container_is_running` <![CDATA[ < ]]>  #{dev_docker_status_container_is_running._lt}
                 </if>
                  <if test="devDockerStatusContainerIsRunning._le != null">
                      AND `dev_docker_status_container_is_running` <![CDATA[ <= ]]>  #{{dev_docker_status_container_is_running._lt}
                 </if>
                  <if test="devDockerStatusContainerIsRunning._gt != null">
                      AND `dev_docker_status_container_is_running` <![CDATA[ > ]]>  #{{dev_docker_status_container_is_running._lt}
                 </if>
                  <if test="devDockerStatusContainerIsRunning._ge != null">
                      AND `dev_docker_status_container_is_running` <![CDATA[ >= ]]>  #{{dev_docker_status_container_is_running._lt}
                 </if>
            </if>
            <if test="proProjectRealFileName != null">
                 <if test="proProjectRealFileName._in != null">
                     AND `pro_project_real_file_name` in
                     <foreach collection="pro_project_real_file_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._notIn != null">
                     AND `pro_project_real_file_name`  not in
                     <foreach collection="pro_project_real_file_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._like != null">
                     <foreach collection="pro_project_real_file_name._like" item="item">
                       AND `pro_project_real_file_name` like #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._notLike != null">
                     <foreach collection="pro_project_real_file_name._notLike" item="item">
                       AND `pro_project_real_file_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._regex != null">
                     <foreach collection="pro_project_real_file_name._regex" item="item">
                       AND `pro_project_real_file_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._regex != null">
                     <foreach collection="pro_project_real_file_name._regex" item="item">
                       AND `pro_project_real_file_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proProjectRealFileName._lt != null">
                      AND `pro_project_real_file_name` <![CDATA[ < ]]>  #{pro_project_real_file_name._lt}
                 </if>
                  <if test="proProjectRealFileName._le != null">
                      AND `pro_project_real_file_name` <![CDATA[ <= ]]>  #{{pro_project_real_file_name._lt}
                 </if>
                  <if test="proProjectRealFileName._gt != null">
                      AND `pro_project_real_file_name` <![CDATA[ > ]]>  #{{pro_project_real_file_name._lt}
                 </if>
                  <if test="proProjectRealFileName._ge != null">
                      AND `pro_project_real_file_name` <![CDATA[ >= ]]>  #{{pro_project_real_file_name._lt}
                 </if>
            </if>
            <if test="proDockerImageName != null">
                 <if test="proDockerImageName._in != null">
                     AND `pro_docker_image_name` in
                     <foreach collection="pro_docker_image_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._notIn != null">
                     AND `pro_docker_image_name`  not in
                     <foreach collection="pro_docker_image_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._like != null">
                     <foreach collection="pro_docker_image_name._like" item="item">
                       AND `pro_docker_image_name` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._notLike != null">
                     <foreach collection="pro_docker_image_name._notLike" item="item">
                       AND `pro_docker_image_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._regex != null">
                     <foreach collection="pro_docker_image_name._regex" item="item">
                       AND `pro_docker_image_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._regex != null">
                     <foreach collection="pro_docker_image_name._regex" item="item">
                       AND `pro_docker_image_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageName._lt != null">
                      AND `pro_docker_image_name` <![CDATA[ < ]]>  #{pro_docker_image_name._lt}
                 </if>
                  <if test="proDockerImageName._le != null">
                      AND `pro_docker_image_name` <![CDATA[ <= ]]>  #{{pro_docker_image_name._lt}
                 </if>
                  <if test="proDockerImageName._gt != null">
                      AND `pro_docker_image_name` <![CDATA[ > ]]>  #{{pro_docker_image_name._lt}
                 </if>
                  <if test="proDockerImageName._ge != null">
                      AND `pro_docker_image_name` <![CDATA[ >= ]]>  #{{pro_docker_image_name._lt}
                 </if>
            </if>
            <if test="proDockerImageShellRemove != null">
                 <if test="proDockerImageShellRemove._in != null">
                     AND `pro_docker_image_shell_remove` in
                     <foreach collection="pro_docker_image_shell_remove._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._notIn != null">
                     AND `pro_docker_image_shell_remove`  not in
                     <foreach collection="pro_docker_image_shell_remove._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._like != null">
                     <foreach collection="pro_docker_image_shell_remove._like" item="item">
                       AND `pro_docker_image_shell_remove` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._notLike != null">
                     <foreach collection="pro_docker_image_shell_remove._notLike" item="item">
                       AND `pro_docker_image_shell_remove` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._regex != null">
                     <foreach collection="pro_docker_image_shell_remove._regex" item="item">
                       AND `pro_docker_image_shell_remove` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._regex != null">
                     <foreach collection="pro_docker_image_shell_remove._regex" item="item">
                       AND `pro_docker_image_shell_remove` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerImageShellRemove._lt != null">
                      AND `pro_docker_image_shell_remove` <![CDATA[ < ]]>  #{pro_docker_image_shell_remove._lt}
                 </if>
                  <if test="proDockerImageShellRemove._le != null">
                      AND `pro_docker_image_shell_remove` <![CDATA[ <= ]]>  #{{pro_docker_image_shell_remove._lt}
                 </if>
                  <if test="proDockerImageShellRemove._gt != null">
                      AND `pro_docker_image_shell_remove` <![CDATA[ > ]]>  #{{pro_docker_image_shell_remove._lt}
                 </if>
                  <if test="proDockerImageShellRemove._ge != null">
                      AND `pro_docker_image_shell_remove` <![CDATA[ >= ]]>  #{{pro_docker_image_shell_remove._lt}
                 </if>
            </if>
            <if test="proDockerContainerId != null">
                 <if test="proDockerContainerId._in != null">
                     AND `pro_docker_container_id` in
                     <foreach collection="pro_docker_container_id._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._notIn != null">
                     AND `pro_docker_container_id`  not in
                     <foreach collection="pro_docker_container_id._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._like != null">
                     <foreach collection="pro_docker_container_id._like" item="item">
                       AND `pro_docker_container_id` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._notLike != null">
                     <foreach collection="pro_docker_container_id._notLike" item="item">
                       AND `pro_docker_container_id` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._regex != null">
                     <foreach collection="pro_docker_container_id._regex" item="item">
                       AND `pro_docker_container_id` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._regex != null">
                     <foreach collection="pro_docker_container_id._regex" item="item">
                       AND `pro_docker_container_id` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerId._lt != null">
                      AND `pro_docker_container_id` <![CDATA[ < ]]>  #{pro_docker_container_id._lt}
                 </if>
                  <if test="proDockerContainerId._le != null">
                      AND `pro_docker_container_id` <![CDATA[ <= ]]>  #{{pro_docker_container_id._lt}
                 </if>
                  <if test="proDockerContainerId._gt != null">
                      AND `pro_docker_container_id` <![CDATA[ > ]]>  #{{pro_docker_container_id._lt}
                 </if>
                  <if test="proDockerContainerId._ge != null">
                      AND `pro_docker_container_id` <![CDATA[ >= ]]>  #{{pro_docker_container_id._lt}
                 </if>
            </if>
            <if test="proDockerContainerName != null">
                 <if test="proDockerContainerName._in != null">
                     AND `pro_docker_container_name` in
                     <foreach collection="pro_docker_container_name._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._notIn != null">
                     AND `pro_docker_container_name`  not in
                     <foreach collection="pro_docker_container_name._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._like != null">
                     <foreach collection="pro_docker_container_name._like" item="item">
                       AND `pro_docker_container_name` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._notLike != null">
                     <foreach collection="pro_docker_container_name._notLike" item="item">
                       AND `pro_docker_container_name` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._regex != null">
                     <foreach collection="pro_docker_container_name._regex" item="item">
                       AND `pro_docker_container_name` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._regex != null">
                     <foreach collection="pro_docker_container_name._regex" item="item">
                       AND `pro_docker_container_name` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerName._lt != null">
                      AND `pro_docker_container_name` <![CDATA[ < ]]>  #{pro_docker_container_name._lt}
                 </if>
                  <if test="proDockerContainerName._le != null">
                      AND `pro_docker_container_name` <![CDATA[ <= ]]>  #{{pro_docker_container_name._lt}
                 </if>
                  <if test="proDockerContainerName._gt != null">
                      AND `pro_docker_container_name` <![CDATA[ > ]]>  #{{pro_docker_container_name._lt}
                 </if>
                  <if test="proDockerContainerName._ge != null">
                      AND `pro_docker_container_name` <![CDATA[ >= ]]>  #{{pro_docker_container_name._lt}
                 </if>
            </if>
            <if test="proDockerContainerShellCreate != null">
                 <if test="proDockerContainerShellCreate._in != null">
                     AND `pro_docker_container_shell_create` in
                     <foreach collection="pro_docker_container_shell_create._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._notIn != null">
                     AND `pro_docker_container_shell_create`  not in
                     <foreach collection="pro_docker_container_shell_create._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._like != null">
                     <foreach collection="pro_docker_container_shell_create._like" item="item">
                       AND `pro_docker_container_shell_create` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._notLike != null">
                     <foreach collection="pro_docker_container_shell_create._notLike" item="item">
                       AND `pro_docker_container_shell_create` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._regex != null">
                     <foreach collection="pro_docker_container_shell_create._regex" item="item">
                       AND `pro_docker_container_shell_create` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._regex != null">
                     <foreach collection="pro_docker_container_shell_create._regex" item="item">
                       AND `pro_docker_container_shell_create` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellCreate._lt != null">
                      AND `pro_docker_container_shell_create` <![CDATA[ < ]]>  #{pro_docker_container_shell_create._lt}
                 </if>
                  <if test="proDockerContainerShellCreate._le != null">
                      AND `pro_docker_container_shell_create` <![CDATA[ <= ]]>  #{{pro_docker_container_shell_create._lt}
                 </if>
                  <if test="proDockerContainerShellCreate._gt != null">
                      AND `pro_docker_container_shell_create` <![CDATA[ > ]]>  #{{pro_docker_container_shell_create._lt}
                 </if>
                  <if test="proDockerContainerShellCreate._ge != null">
                      AND `pro_docker_container_shell_create` <![CDATA[ >= ]]>  #{{pro_docker_container_shell_create._lt}
                 </if>
            </if>
            <if test="proDockerContainerShellRun != null">
                 <if test="proDockerContainerShellRun._in != null">
                     AND `pro_docker_container_shell_run` in
                     <foreach collection="pro_docker_container_shell_run._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._notIn != null">
                     AND `pro_docker_container_shell_run`  not in
                     <foreach collection="pro_docker_container_shell_run._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._like != null">
                     <foreach collection="pro_docker_container_shell_run._like" item="item">
                       AND `pro_docker_container_shell_run` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._notLike != null">
                     <foreach collection="pro_docker_container_shell_run._notLike" item="item">
                       AND `pro_docker_container_shell_run` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._regex != null">
                     <foreach collection="pro_docker_container_shell_run._regex" item="item">
                       AND `pro_docker_container_shell_run` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._regex != null">
                     <foreach collection="pro_docker_container_shell_run._regex" item="item">
                       AND `pro_docker_container_shell_run` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRun._lt != null">
                      AND `pro_docker_container_shell_run` <![CDATA[ < ]]>  #{pro_docker_container_shell_run._lt}
                 </if>
                  <if test="proDockerContainerShellRun._le != null">
                      AND `pro_docker_container_shell_run` <![CDATA[ <= ]]>  #{{pro_docker_container_shell_run._lt}
                 </if>
                  <if test="proDockerContainerShellRun._gt != null">
                      AND `pro_docker_container_shell_run` <![CDATA[ > ]]>  #{{pro_docker_container_shell_run._lt}
                 </if>
                  <if test="proDockerContainerShellRun._ge != null">
                      AND `pro_docker_container_shell_run` <![CDATA[ >= ]]>  #{{pro_docker_container_shell_run._lt}
                 </if>
            </if>
            <if test="proDockerContainerShellStop != null">
                 <if test="proDockerContainerShellStop._in != null">
                     AND `pro_docker_container_shell_stop` in
                     <foreach collection="pro_docker_container_shell_stop._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._notIn != null">
                     AND `pro_docker_container_shell_stop`  not in
                     <foreach collection="pro_docker_container_shell_stop._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._like != null">
                     <foreach collection="pro_docker_container_shell_stop._like" item="item">
                       AND `pro_docker_container_shell_stop` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._notLike != null">
                     <foreach collection="pro_docker_container_shell_stop._notLike" item="item">
                       AND `pro_docker_container_shell_stop` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._regex != null">
                     <foreach collection="pro_docker_container_shell_stop._regex" item="item">
                       AND `pro_docker_container_shell_stop` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._regex != null">
                     <foreach collection="pro_docker_container_shell_stop._regex" item="item">
                       AND `pro_docker_container_shell_stop` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellStop._lt != null">
                      AND `pro_docker_container_shell_stop` <![CDATA[ < ]]>  #{pro_docker_container_shell_stop._lt}
                 </if>
                  <if test="proDockerContainerShellStop._le != null">
                      AND `pro_docker_container_shell_stop` <![CDATA[ <= ]]>  #{{pro_docker_container_shell_stop._lt}
                 </if>
                  <if test="proDockerContainerShellStop._gt != null">
                      AND `pro_docker_container_shell_stop` <![CDATA[ > ]]>  #{{pro_docker_container_shell_stop._lt}
                 </if>
                  <if test="proDockerContainerShellStop._ge != null">
                      AND `pro_docker_container_shell_stop` <![CDATA[ >= ]]>  #{{pro_docker_container_shell_stop._lt}
                 </if>
            </if>
            <if test="proDockerContainerShellRemove != null">
                 <if test="proDockerContainerShellRemove._in != null">
                     AND `pro_docker_container_shell_remove` in
                     <foreach collection="pro_docker_container_shell_remove._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._notIn != null">
                     AND `pro_docker_container_shell_remove`  not in
                     <foreach collection="pro_docker_container_shell_remove._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._like != null">
                     <foreach collection="pro_docker_container_shell_remove._like" item="item">
                       AND `pro_docker_container_shell_remove` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._notLike != null">
                     <foreach collection="pro_docker_container_shell_remove._notLike" item="item">
                       AND `pro_docker_container_shell_remove` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._regex != null">
                     <foreach collection="pro_docker_container_shell_remove._regex" item="item">
                       AND `pro_docker_container_shell_remove` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._regex != null">
                     <foreach collection="pro_docker_container_shell_remove._regex" item="item">
                       AND `pro_docker_container_shell_remove` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerContainerShellRemove._lt != null">
                      AND `pro_docker_container_shell_remove` <![CDATA[ < ]]>  #{pro_docker_container_shell_remove._lt}
                 </if>
                  <if test="proDockerContainerShellRemove._le != null">
                      AND `pro_docker_container_shell_remove` <![CDATA[ <= ]]>  #{{pro_docker_container_shell_remove._lt}
                 </if>
                  <if test="proDockerContainerShellRemove._gt != null">
                      AND `pro_docker_container_shell_remove` <![CDATA[ > ]]>  #{{pro_docker_container_shell_remove._lt}
                 </if>
                  <if test="proDockerContainerShellRemove._ge != null">
                      AND `pro_docker_container_shell_remove` <![CDATA[ >= ]]>  #{{pro_docker_container_shell_remove._lt}
                 </if>
            </if>
            <if test="proDockerStatusImagesIsExist != null">
                 <if test="proDockerStatusImagesIsExist._in != null">
                     AND `pro_docker_status_images_is_exist` in
                     <foreach collection="pro_docker_status_images_is_exist._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._notIn != null">
                     AND `pro_docker_status_images_is_exist`  not in
                     <foreach collection="pro_docker_status_images_is_exist._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._like != null">
                     <foreach collection="pro_docker_status_images_is_exist._like" item="item">
                       AND `pro_docker_status_images_is_exist` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._notLike != null">
                     <foreach collection="pro_docker_status_images_is_exist._notLike" item="item">
                       AND `pro_docker_status_images_is_exist` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._regex != null">
                     <foreach collection="pro_docker_status_images_is_exist._regex" item="item">
                       AND `pro_docker_status_images_is_exist` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._regex != null">
                     <foreach collection="pro_docker_status_images_is_exist._regex" item="item">
                       AND `pro_docker_status_images_is_exist` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusImagesIsExist._lt != null">
                      AND `pro_docker_status_images_is_exist` <![CDATA[ < ]]>  #{pro_docker_status_images_is_exist._lt}
                 </if>
                  <if test="proDockerStatusImagesIsExist._le != null">
                      AND `pro_docker_status_images_is_exist` <![CDATA[ <= ]]>  #{{pro_docker_status_images_is_exist._lt}
                 </if>
                  <if test="proDockerStatusImagesIsExist._gt != null">
                      AND `pro_docker_status_images_is_exist` <![CDATA[ > ]]>  #{{pro_docker_status_images_is_exist._lt}
                 </if>
                  <if test="proDockerStatusImagesIsExist._ge != null">
                      AND `pro_docker_status_images_is_exist` <![CDATA[ >= ]]>  #{{pro_docker_status_images_is_exist._lt}
                 </if>
            </if>
            <if test="proDockerStatusContainerIsExist != null">
                 <if test="proDockerStatusContainerIsExist._in != null">
                     AND `pro_docker_status_container_is_exist` in
                     <foreach collection="pro_docker_status_container_is_exist._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._notIn != null">
                     AND `pro_docker_status_container_is_exist`  not in
                     <foreach collection="pro_docker_status_container_is_exist._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._like != null">
                     <foreach collection="pro_docker_status_container_is_exist._like" item="item">
                       AND `pro_docker_status_container_is_exist` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._notLike != null">
                     <foreach collection="pro_docker_status_container_is_exist._notLike" item="item">
                       AND `pro_docker_status_container_is_exist` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._regex != null">
                     <foreach collection="pro_docker_status_container_is_exist._regex" item="item">
                       AND `pro_docker_status_container_is_exist` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._regex != null">
                     <foreach collection="pro_docker_status_container_is_exist._regex" item="item">
                       AND `pro_docker_status_container_is_exist` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsExist._lt != null">
                      AND `pro_docker_status_container_is_exist` <![CDATA[ < ]]>  #{pro_docker_status_container_is_exist._lt}
                 </if>
                  <if test="proDockerStatusContainerIsExist._le != null">
                      AND `pro_docker_status_container_is_exist` <![CDATA[ <= ]]>  #{{pro_docker_status_container_is_exist._lt}
                 </if>
                  <if test="proDockerStatusContainerIsExist._gt != null">
                      AND `pro_docker_status_container_is_exist` <![CDATA[ > ]]>  #{{pro_docker_status_container_is_exist._lt}
                 </if>
                  <if test="proDockerStatusContainerIsExist._ge != null">
                      AND `pro_docker_status_container_is_exist` <![CDATA[ >= ]]>  #{{pro_docker_status_container_is_exist._lt}
                 </if>
            </if>
            <if test="proDockerStatusContainerIsRunning != null">
                 <if test="proDockerStatusContainerIsRunning._in != null">
                     AND `pro_docker_status_container_is_running` in
                     <foreach collection="pro_docker_status_container_is_running._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._notIn != null">
                     AND `pro_docker_status_container_is_running`  not in
                     <foreach collection="pro_docker_status_container_is_running._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._like != null">
                     <foreach collection="pro_docker_status_container_is_running._like" item="item">
                       AND `pro_docker_status_container_is_running` like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._notLike != null">
                     <foreach collection="pro_docker_status_container_is_running._notLike" item="item">
                       AND `pro_docker_status_container_is_running` not like #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._regex != null">
                     <foreach collection="pro_docker_status_container_is_running._regex" item="item">
                       AND `pro_docker_status_container_is_running` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._regex != null">
                     <foreach collection="pro_docker_status_container_is_running._regex" item="item">
                       AND `pro_docker_status_container_is_running` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="proDockerStatusContainerIsRunning._lt != null">
                      AND `pro_docker_status_container_is_running` <![CDATA[ < ]]>  #{pro_docker_status_container_is_running._lt}
                 </if>
                  <if test="proDockerStatusContainerIsRunning._le != null">
                      AND `pro_docker_status_container_is_running` <![CDATA[ <= ]]>  #{{pro_docker_status_container_is_running._lt}
                 </if>
                  <if test="proDockerStatusContainerIsRunning._gt != null">
                      AND `pro_docker_status_container_is_running` <![CDATA[ > ]]>  #{{pro_docker_status_container_is_running._lt}
                 </if>
                  <if test="proDockerStatusContainerIsRunning._ge != null">
                      AND `pro_docker_status_container_is_running` <![CDATA[ >= ]]>  #{{pro_docker_status_container_is_running._lt}
                 </if>
            </if>
            <if test="updateTime != null">
                 <if test="updateTime._in != null">
                     AND `update_time` in
                     <foreach collection="update_time._in" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._notIn != null">
                     AND `update_time`  not in
                     <foreach collection="update_time._notIn" item="item" separator="," open="(" close=")">
                         #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._like != null">
                     <foreach collection="update_time._like" item="item">
                       AND `update_time` like #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._notLike != null">
                     <foreach collection="update_time._notLike" item="item">
                       AND `update_time` not like #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._regex != null">
                     <foreach collection="update_time._regex" item="item">
                       AND `update_time` REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._regex != null">
                     <foreach collection="update_time._regex" item="item">
                       AND `update_time` not REGEXP #{item}
                     </foreach>
                 </if>
                 <if test="updateTime._lt != null">
                      AND `update_time` <![CDATA[ < ]]>  #{update_time._lt}
                 </if>
                  <if test="updateTime._le != null">
                      AND `update_time` <![CDATA[ <= ]]>  #{{update_time._lt}
                 </if>
                  <if test="updateTime._gt != null">
                      AND `update_time` <![CDATA[ > ]]>  #{{update_time._lt}
                 </if>
                  <if test="updateTime._ge != null">
                      AND `update_time` <![CDATA[ >= ]]>  #{{update_time._lt}
                 </if>
            </if>
        </where>
        </select>

    <update id="updateBase"
            parameterType="demomaster.vo.ProjectPlusVo">
        UPDATE `project_plus`
        <set>
            <if test="source.id != null">
                `id` = #{source.id},
            </if>
            <if test="source.criteriaid != null">
                `criteriaId` = #{source.criteriaid},
            </if>
            <if test="source.projectName != null">
                `project_name` = #{source.projectName},
            </if>
            <if test="source.projectUpdateTime != null">
                `project_update_time` = #{source.projectUpdateTime},
            </if>
            <if test="source.projectType != null">
                `project_type` = #{source.projectType},
            </if>
            <if test="source.projectPrice != null">
                `project_price` = #{source.projectPrice},
            </if>
            <if test="source.projectPackageType != null">
                `project_package_type` = #{source.projectPackageType},
            </if>
            <if test="source.projectPanAddress != null">
                `project_pan_address` = #{source.projectPanAddress},
            </if>
            <if test="source.projectHtmlBody != null">
                `project_html_body` = #{source.projectHtmlBody},
            </if>
            <if test="source.projectSourceUrl != null">
                `project_source_url` = #{source.projectSourceUrl},
            </if>
            <if test="source.projectLanguage != null">
                `project_language` = #{source.projectLanguage},
            </if>
            <if test="source.projectSize2 != null">
                `project_size2` = #{source.projectSize2},
            </if>
            <if test="source.projectSizeNum != null">
                `project_size_num` = #{source.projectSizeNum},
            </if>
            <if test="source.projectSizeType != null">
                `project_size_type` = #{source.projectSizeType},
            </if>
            <if test="source.projectImgs != null">
                `project_imgs` = #{source.projectImgs},
            </if>
            <if test="source.projectImgsDefault != null">
                `project_imgs_default` = #{source.projectImgsDefault},
            </if>
            <if test="source.projectRuntime != null">
                `project_runtime` = #{source.projectRuntime},
            </if>
            <if test="source.projectOfficialWebsite != null">
                `project_official_website` = #{source.projectOfficialWebsite},
            </if>
            <if test="source.projectShowWebsite != null">
                `project_show_website` = #{source.projectShowWebsite},
            </if>
            <if test="source.projectDownloadUrls != null">
                `project_download_urls` = #{source.projectDownloadUrls},
            </if>
            <if test="source.projectDownloadSum != null">
                `project_download_sum` = #{source.projectDownloadSum},
            </if>
            <if test="source.projectIntroduction != null">
                `project_introduction` = #{source.projectIntroduction},
            </if>
            <if test="source.projectStatus != null">
                `project_status` = #{source.projectStatus},
            </if>
            <if test="source.projectMark != null">
                `project_mark` = #{source.projectMark},
            </if>
            <if test="source.projectCanRunning != null">
                `project_can_running` = #{source.projectCanRunning},
            </if>
            <if test="source.projectSql != null">
                `project_sql` = #{source.projectSql},
            </if>
            <if test="source.projectPort != null">
                `project_port` = #{source.projectPort},
            </if>
            <if test="source.addressContainerOuter != null">
                `address_container_outer` = #{source.addressContainerOuter},
            </if>
            <if test="source.addressContainerInner != null">
                `address_container_inner` = #{source.addressContainerInner},
            </if>
            <if test="source.addressProjectFront != null">
                `address_project_front` = #{source.addressProjectFront},
            </if>
            <if test="source.addressProjectBackground != null">
                `address_project_background` = #{source.addressProjectBackground},
            </if>
            <if test="source.addressProjectBackgroundAccountPasswd != null">
                `address_project_background_account_passwd` = #{source.addressProjectBackgroundAccountPasswd},
            </if>
            <if test="source.devProjectRealFileName != null">
                `dev_project_real_file_name` = #{source.devProjectRealFileName},
            </if>
            <if test="source.devDockerImageName != null">
                `dev_docker_image_name` = #{source.devDockerImageName},
            </if>
            <if test="source.devDockerImageShellRemove != null">
                `dev_docker_image_shell_remove` = #{source.devDockerImageShellRemove},
            </if>
            <if test="source.devDockerContainerId != null">
                `dev_docker_container_id` = #{source.devDockerContainerId},
            </if>
            <if test="source.devDockerContainerName != null">
                `dev_docker_container_name` = #{source.devDockerContainerName},
            </if>
            <if test="source.devDockerContainerShellCreate != null">
                `dev_docker_container_shell_create` = #{source.devDockerContainerShellCreate},
            </if>
            <if test="source.devDockerContainerShellRun != null">
                `dev_docker_container_shell_run` = #{source.devDockerContainerShellRun},
            </if>
            <if test="source.devDockerContainerShellStop != null">
                `dev_docker_container_shell_stop` = #{source.devDockerContainerShellStop},
            </if>
            <if test="source.devDockerContainerShellRemove != null">
                `dev_docker_container_shell_remove` = #{source.devDockerContainerShellRemove},
            </if>
            <if test="source.devDockerStatusImagesIsExist != null">
                `dev_docker_status_images_is_exist` = #{source.devDockerStatusImagesIsExist},
            </if>
            <if test="source.devDockerStatusContainerIsExist != null">
                `dev_docker_status_container_is_exist` = #{source.devDockerStatusContainerIsExist},
            </if>
            <if test="source.devDockerStatusContainerIsRunning != null">
                `dev_docker_status_container_is_running` = #{source.devDockerStatusContainerIsRunning},
            </if>
            <if test="source.proProjectRealFileName != null">
                `pro_project_real_file_name` = #{source.proProjectRealFileName},
            </if>
            <if test="source.proDockerImageName != null">
                `pro_docker_image_name` = #{source.proDockerImageName},
            </if>
            <if test="source.proDockerImageShellRemove != null">
                `pro_docker_image_shell_remove` = #{source.proDockerImageShellRemove},
            </if>
            <if test="source.proDockerContainerId != null">
                `pro_docker_container_id` = #{source.proDockerContainerId},
            </if>
            <if test="source.proDockerContainerName != null">
                `pro_docker_container_name` = #{source.proDockerContainerName},
            </if>
            <if test="source.proDockerContainerShellCreate != null">
                `pro_docker_container_shell_create` = #{source.proDockerContainerShellCreate},
            </if>
            <if test="source.proDockerContainerShellRun != null">
                `pro_docker_container_shell_run` = #{source.proDockerContainerShellRun},
            </if>
            <if test="source.proDockerContainerShellStop != null">
                `pro_docker_container_shell_stop` = #{source.proDockerContainerShellStop},
            </if>
            <if test="source.proDockerContainerShellRemove != null">
                `pro_docker_container_shell_remove` = #{source.proDockerContainerShellRemove},
            </if>
            <if test="source.proDockerStatusImagesIsExist != null">
                `pro_docker_status_images_is_exist` = #{source.proDockerStatusImagesIsExist},
            </if>
            <if test="source.proDockerStatusContainerIsExist != null">
                `pro_docker_status_container_is_exist` = #{source.proDockerStatusContainerIsExist},
            </if>
            <if test="source.proDockerStatusContainerIsRunning != null">
                `pro_docker_status_container_is_running` = #{source.proDockerStatusContainerIsRunning},
            </if>
            <if test="source.updateTime != null">
                `update_time` = #{source.updateTime}
            </if>
        </set>
        <where>
            1 =1
            <if test="target.id != null">
                AND `id` = #{target.id}
            </if>
            <if test="target.criteriaid != null">
                AND `criteriaId` = #{target.criteriaid}
            </if>
            <if test="target.projectName != null">
                AND `project_name` = #{target.projectName}
            </if>
            <if test="target.projectUpdateTime != null">
                AND `project_update_time` = #{target.projectUpdateTime}
            </if>
            <if test="target.projectType != null">
                AND `project_type` = #{target.projectType}
            </if>
            <if test="target.projectPrice != null">
                AND `project_price` = #{target.projectPrice}
            </if>
            <if test="target.projectPackageType != null">
                AND `project_package_type` = #{target.projectPackageType}
            </if>
            <if test="target.projectPanAddress != null">
                AND `project_pan_address` = #{target.projectPanAddress}
            </if>
            <if test="target.projectHtmlBody != null">
                AND `project_html_body` = #{target.projectHtmlBody}
            </if>
            <if test="target.projectSourceUrl != null">
                AND `project_source_url` = #{target.projectSourceUrl}
            </if>
            <if test="target.projectLanguage != null">
                AND `project_language` = #{target.projectLanguage}
            </if>
            <if test="target.projectSize2 != null">
                AND `project_size2` = #{target.projectSize2}
            </if>
            <if test="target.projectSizeNum != null">
                AND `project_size_num` = #{target.projectSizeNum}
            </if>
            <if test="target.projectSizeType != null">
                AND `project_size_type` = #{target.projectSizeType}
            </if>
            <if test="target.projectImgs != null">
                AND `project_imgs` = #{target.projectImgs}
            </if>
            <if test="target.projectImgsDefault != null">
                AND `project_imgs_default` = #{target.projectImgsDefault}
            </if>
            <if test="target.projectRuntime != null">
                AND `project_runtime` = #{target.projectRuntime}
            </if>
            <if test="target.projectOfficialWebsite != null">
                AND `project_official_website` = #{target.projectOfficialWebsite}
            </if>
            <if test="target.projectShowWebsite != null">
                AND `project_show_website` = #{target.projectShowWebsite}
            </if>
            <if test="target.projectDownloadUrls != null">
                AND `project_download_urls` = #{target.projectDownloadUrls}
            </if>
            <if test="target.projectDownloadSum != null">
                AND `project_download_sum` = #{target.projectDownloadSum}
            </if>
            <if test="target.projectIntroduction != null">
                AND `project_introduction` = #{target.projectIntroduction}
            </if>
            <if test="target.projectStatus != null">
                AND `project_status` = #{target.projectStatus}
            </if>
            <if test="target.projectMark != null">
                AND `project_mark` = #{target.projectMark}
            </if>
            <if test="target.projectCanRunning != null">
                AND `project_can_running` = #{target.projectCanRunning}
            </if>
            <if test="target.projectSql != null">
                AND `project_sql` = #{target.projectSql}
            </if>
            <if test="target.projectPort != null">
                AND `project_port` = #{target.projectPort}
            </if>
            <if test="target.addressContainerOuter != null">
                AND `address_container_outer` = #{target.addressContainerOuter}
            </if>
            <if test="target.addressContainerInner != null">
                AND `address_container_inner` = #{target.addressContainerInner}
            </if>
            <if test="target.addressProjectFront != null">
                AND `address_project_front` = #{target.addressProjectFront}
            </if>
            <if test="target.addressProjectBackground != null">
                AND `address_project_background` = #{target.addressProjectBackground}
            </if>
            <if test="target.addressProjectBackgroundAccountPasswd != null">
                AND `address_project_background_account_passwd` = #{target.addressProjectBackgroundAccountPasswd}
            </if>
            <if test="target.devProjectRealFileName != null">
                AND `dev_project_real_file_name` = #{target.devProjectRealFileName}
            </if>
            <if test="target.devDockerImageName != null">
                AND `dev_docker_image_name` = #{target.devDockerImageName}
            </if>
            <if test="target.devDockerImageShellRemove != null">
                AND `dev_docker_image_shell_remove` = #{target.devDockerImageShellRemove}
            </if>
            <if test="target.devDockerContainerId != null">
                AND `dev_docker_container_id` = #{target.devDockerContainerId}
            </if>
            <if test="target.devDockerContainerName != null">
                AND `dev_docker_container_name` = #{target.devDockerContainerName}
            </if>
            <if test="target.devDockerContainerShellCreate != null">
                AND `dev_docker_container_shell_create` = #{target.devDockerContainerShellCreate}
            </if>
            <if test="target.devDockerContainerShellRun != null">
                AND `dev_docker_container_shell_run` = #{target.devDockerContainerShellRun}
            </if>
            <if test="target.devDockerContainerShellStop != null">
                AND `dev_docker_container_shell_stop` = #{target.devDockerContainerShellStop}
            </if>
            <if test="target.devDockerContainerShellRemove != null">
                AND `dev_docker_container_shell_remove` = #{target.devDockerContainerShellRemove}
            </if>
            <if test="target.devDockerStatusImagesIsExist != null">
                AND `dev_docker_status_images_is_exist` = #{target.devDockerStatusImagesIsExist}
            </if>
            <if test="target.devDockerStatusContainerIsExist != null">
                AND `dev_docker_status_container_is_exist` = #{target.devDockerStatusContainerIsExist}
            </if>
            <if test="target.devDockerStatusContainerIsRunning != null">
                AND `dev_docker_status_container_is_running` = #{target.devDockerStatusContainerIsRunning}
            </if>
            <if test="target.proProjectRealFileName != null">
                AND `pro_project_real_file_name` = #{target.proProjectRealFileName}
            </if>
            <if test="target.proDockerImageName != null">
                AND `pro_docker_image_name` = #{target.proDockerImageName}
            </if>
            <if test="target.proDockerImageShellRemove != null">
                AND `pro_docker_image_shell_remove` = #{target.proDockerImageShellRemove}
            </if>
            <if test="target.proDockerContainerId != null">
                AND `pro_docker_container_id` = #{target.proDockerContainerId}
            </if>
            <if test="target.proDockerContainerName != null">
                AND `pro_docker_container_name` = #{target.proDockerContainerName}
            </if>
            <if test="target.proDockerContainerShellCreate != null">
                AND `pro_docker_container_shell_create` = #{target.proDockerContainerShellCreate}
            </if>
            <if test="target.proDockerContainerShellRun != null">
                AND `pro_docker_container_shell_run` = #{target.proDockerContainerShellRun}
            </if>
            <if test="target.proDockerContainerShellStop != null">
                AND `pro_docker_container_shell_stop` = #{target.proDockerContainerShellStop}
            </if>
            <if test="target.proDockerContainerShellRemove != null">
                AND `pro_docker_container_shell_remove` = #{target.proDockerContainerShellRemove}
            </if>
            <if test="target.proDockerStatusImagesIsExist != null">
                AND `pro_docker_status_images_is_exist` = #{target.proDockerStatusImagesIsExist}
            </if>
            <if test="target.proDockerStatusContainerIsExist != null">
                AND `pro_docker_status_container_is_exist` = #{target.proDockerStatusContainerIsExist}
            </if>
            <if test="target.proDockerStatusContainerIsRunning != null">
                AND `pro_docker_status_container_is_running` = #{target.proDockerStatusContainerIsRunning}
            </if>
            <if test="target.updateTime != null">
                AND `update_time` = #{target.updateTime}
            </if>
        </where>
    </update>

    <update id="updateBaseIncludeNull"
            parameterType="demomaster.vo.ProjectPlusVo">
        UPDATE `project_plus`
        <set>
            `id` = #{source.id},
            `criteriaId` = #{source.criteriaid},
            `project_name` = #{source.projectName},
            `project_update_time` = #{source.projectUpdateTime},
            `project_type` = #{source.projectType},
            `project_price` = #{source.projectPrice},
            `project_package_type` = #{source.projectPackageType},
            `project_pan_address` = #{source.projectPanAddress},
            `project_html_body` = #{source.projectHtmlBody},
            `project_source_url` = #{source.projectSourceUrl},
            `project_language` = #{source.projectLanguage},
            `project_size2` = #{source.projectSize2},
            `project_size_num` = #{source.projectSizeNum},
            `project_size_type` = #{source.projectSizeType},
            `project_imgs` = #{source.projectImgs},
            `project_imgs_default` = #{source.projectImgsDefault},
            `project_runtime` = #{source.projectRuntime},
            `project_official_website` = #{source.projectOfficialWebsite},
            `project_show_website` = #{source.projectShowWebsite},
            `project_download_urls` = #{source.projectDownloadUrls},
            `project_download_sum` = #{source.projectDownloadSum},
            `project_introduction` = #{source.projectIntroduction},
            `project_status` = #{source.projectStatus},
            `project_mark` = #{source.projectMark},
            `project_can_running` = #{source.projectCanRunning},
            `project_sql` = #{source.projectSql},
            `project_port` = #{source.projectPort},
            `address_container_outer` = #{source.addressContainerOuter},
            `address_container_inner` = #{source.addressContainerInner},
            `address_project_front` = #{source.addressProjectFront},
            `address_project_background` = #{source.addressProjectBackground},
            `address_project_background_account_passwd` = #{source.addressProjectBackgroundAccountPasswd},
            `dev_project_real_file_name` = #{source.devProjectRealFileName},
            `dev_docker_image_name` = #{source.devDockerImageName},
            `dev_docker_image_shell_remove` = #{source.devDockerImageShellRemove},
            `dev_docker_container_id` = #{source.devDockerContainerId},
            `dev_docker_container_name` = #{source.devDockerContainerName},
            `dev_docker_container_shell_create` = #{source.devDockerContainerShellCreate},
            `dev_docker_container_shell_run` = #{source.devDockerContainerShellRun},
            `dev_docker_container_shell_stop` = #{source.devDockerContainerShellStop},
            `dev_docker_container_shell_remove` = #{source.devDockerContainerShellRemove},
            `dev_docker_status_images_is_exist` = #{source.devDockerStatusImagesIsExist},
            `dev_docker_status_container_is_exist` = #{source.devDockerStatusContainerIsExist},
            `dev_docker_status_container_is_running` = #{source.devDockerStatusContainerIsRunning},
            `pro_project_real_file_name` = #{source.proProjectRealFileName},
            `pro_docker_image_name` = #{source.proDockerImageName},
            `pro_docker_image_shell_remove` = #{source.proDockerImageShellRemove},
            `pro_docker_container_id` = #{source.proDockerContainerId},
            `pro_docker_container_name` = #{source.proDockerContainerName},
            `pro_docker_container_shell_create` = #{source.proDockerContainerShellCreate},
            `pro_docker_container_shell_run` = #{source.proDockerContainerShellRun},
            `pro_docker_container_shell_stop` = #{source.proDockerContainerShellStop},
            `pro_docker_container_shell_remove` = #{source.proDockerContainerShellRemove},
            `pro_docker_status_images_is_exist` = #{source.proDockerStatusImagesIsExist},
            `pro_docker_status_container_is_exist` = #{source.proDockerStatusContainerIsExist},
            `pro_docker_status_container_is_running` = #{source.proDockerStatusContainerIsRunning},
            `update_time` = #{source.updateTime}
        </set>
        <where>
            1 =1
            <if test="target.id != null">
                AND `id` = #{target.id}
            </if>
            <if test="target.criteriaid != null">
                AND `criteriaId` = #{target.criteriaid}
            </if>
            <if test="target.projectName != null">
                AND `project_name` = #{target.projectName}
            </if>
            <if test="target.projectUpdateTime != null">
                AND `project_update_time` = #{target.projectUpdateTime}
            </if>
            <if test="target.projectType != null">
                AND `project_type` = #{target.projectType}
            </if>
            <if test="target.projectPrice != null">
                AND `project_price` = #{target.projectPrice}
            </if>
            <if test="target.projectPackageType != null">
                AND `project_package_type` = #{target.projectPackageType}
            </if>
            <if test="target.projectPanAddress != null">
                AND `project_pan_address` = #{target.projectPanAddress}
            </if>
            <if test="target.projectHtmlBody != null">
                AND `project_html_body` = #{target.projectHtmlBody}
            </if>
            <if test="target.projectSourceUrl != null">
                AND `project_source_url` = #{target.projectSourceUrl}
            </if>
            <if test="target.projectLanguage != null">
                AND `project_language` = #{target.projectLanguage}
            </if>
            <if test="target.projectSize2 != null">
                AND `project_size2` = #{target.projectSize2}
            </if>
            <if test="target.projectSizeNum != null">
                AND `project_size_num` = #{target.projectSizeNum}
            </if>
            <if test="target.projectSizeType != null">
                AND `project_size_type` = #{target.projectSizeType}
            </if>
            <if test="target.projectImgs != null">
                AND `project_imgs` = #{target.projectImgs}
            </if>
            <if test="target.projectImgsDefault != null">
                AND `project_imgs_default` = #{target.projectImgsDefault}
            </if>
            <if test="target.projectRuntime != null">
                AND `project_runtime` = #{target.projectRuntime}
            </if>
            <if test="target.projectOfficialWebsite != null">
                AND `project_official_website` = #{target.projectOfficialWebsite}
            </if>
            <if test="target.projectShowWebsite != null">
                AND `project_show_website` = #{target.projectShowWebsite}
            </if>
            <if test="target.projectDownloadUrls != null">
                AND `project_download_urls` = #{target.projectDownloadUrls}
            </if>
            <if test="target.projectDownloadSum != null">
                AND `project_download_sum` = #{target.projectDownloadSum}
            </if>
            <if test="target.projectIntroduction != null">
                AND `project_introduction` = #{target.projectIntroduction}
            </if>
            <if test="target.projectStatus != null">
                AND `project_status` = #{target.projectStatus}
            </if>
            <if test="target.projectMark != null">
                AND `project_mark` = #{target.projectMark}
            </if>
            <if test="target.projectCanRunning != null">
                AND `project_can_running` = #{target.projectCanRunning}
            </if>
            <if test="target.projectSql != null">
                AND `project_sql` = #{target.projectSql}
            </if>
            <if test="target.projectPort != null">
                AND `project_port` = #{target.projectPort}
            </if>
            <if test="target.addressContainerOuter != null">
                AND `address_container_outer` = #{target.addressContainerOuter}
            </if>
            <if test="target.addressContainerInner != null">
                AND `address_container_inner` = #{target.addressContainerInner}
            </if>
            <if test="target.addressProjectFront != null">
                AND `address_project_front` = #{target.addressProjectFront}
            </if>
            <if test="target.addressProjectBackground != null">
                AND `address_project_background` = #{target.addressProjectBackground}
            </if>
            <if test="target.addressProjectBackgroundAccountPasswd != null">
                AND `address_project_background_account_passwd` = #{target.addressProjectBackgroundAccountPasswd}
            </if>
            <if test="target.devProjectRealFileName != null">
                AND `dev_project_real_file_name` = #{target.devProjectRealFileName}
            </if>
            <if test="target.devDockerImageName != null">
                AND `dev_docker_image_name` = #{target.devDockerImageName}
            </if>
            <if test="target.devDockerImageShellRemove != null">
                AND `dev_docker_image_shell_remove` = #{target.devDockerImageShellRemove}
            </if>
            <if test="target.devDockerContainerId != null">
                AND `dev_docker_container_id` = #{target.devDockerContainerId}
            </if>
            <if test="target.devDockerContainerName != null">
                AND `dev_docker_container_name` = #{target.devDockerContainerName}
            </if>
            <if test="target.devDockerContainerShellCreate != null">
                AND `dev_docker_container_shell_create` = #{target.devDockerContainerShellCreate}
            </if>
            <if test="target.devDockerContainerShellRun != null">
                AND `dev_docker_container_shell_run` = #{target.devDockerContainerShellRun}
            </if>
            <if test="target.devDockerContainerShellStop != null">
                AND `dev_docker_container_shell_stop` = #{target.devDockerContainerShellStop}
            </if>
            <if test="target.devDockerContainerShellRemove != null">
                AND `dev_docker_container_shell_remove` = #{target.devDockerContainerShellRemove}
            </if>
            <if test="target.devDockerStatusImagesIsExist != null">
                AND `dev_docker_status_images_is_exist` = #{target.devDockerStatusImagesIsExist}
            </if>
            <if test="target.devDockerStatusContainerIsExist != null">
                AND `dev_docker_status_container_is_exist` = #{target.devDockerStatusContainerIsExist}
            </if>
            <if test="target.devDockerStatusContainerIsRunning != null">
                AND `dev_docker_status_container_is_running` = #{target.devDockerStatusContainerIsRunning}
            </if>
            <if test="target.proProjectRealFileName != null">
                AND `pro_project_real_file_name` = #{target.proProjectRealFileName}
            </if>
            <if test="target.proDockerImageName != null">
                AND `pro_docker_image_name` = #{target.proDockerImageName}
            </if>
            <if test="target.proDockerImageShellRemove != null">
                AND `pro_docker_image_shell_remove` = #{target.proDockerImageShellRemove}
            </if>
            <if test="target.proDockerContainerId != null">
                AND `pro_docker_container_id` = #{target.proDockerContainerId}
            </if>
            <if test="target.proDockerContainerName != null">
                AND `pro_docker_container_name` = #{target.proDockerContainerName}
            </if>
            <if test="target.proDockerContainerShellCreate != null">
                AND `pro_docker_container_shell_create` = #{target.proDockerContainerShellCreate}
            </if>
            <if test="target.proDockerContainerShellRun != null">
                AND `pro_docker_container_shell_run` = #{target.proDockerContainerShellRun}
            </if>
            <if test="target.proDockerContainerShellStop != null">
                AND `pro_docker_container_shell_stop` = #{target.proDockerContainerShellStop}
            </if>
            <if test="target.proDockerContainerShellRemove != null">
                AND `pro_docker_container_shell_remove` = #{target.proDockerContainerShellRemove}
            </if>
            <if test="target.proDockerStatusImagesIsExist != null">
                AND `pro_docker_status_images_is_exist` = #{target.proDockerStatusImagesIsExist}
            </if>
            <if test="target.proDockerStatusContainerIsExist != null">
                AND `pro_docker_status_container_is_exist` = #{target.proDockerStatusContainerIsExist}
            </if>
            <if test="target.proDockerStatusContainerIsRunning != null">
                AND `pro_docker_status_container_is_running` = #{target.proDockerStatusContainerIsRunning}
            </if>
            <if test="target.updateTime != null">
                AND `update_time` = #{target.updateTime}
            </if>
        </where>
    </update>

    <delete id="deleteBase"
            parameterType="demomaster.vo.ProjectPlusVo">
        DELETE FROM `project_plus`
        <where>
            1 =1
            <if test="id != null">
                AND `id` = #{id}
            </if>
            <if test="criteriaid != null">
                AND `criteriaId` = #{criteriaid}
            </if>
            <if test="projectName != null">
                AND `project_name` = #{projectName}
            </if>
            <if test="projectUpdateTime != null">
                AND `project_update_time` = #{projectUpdateTime}
            </if>
            <if test="projectType != null">
                AND `project_type` = #{projectType}
            </if>
            <if test="projectPrice != null">
                AND `project_price` = #{projectPrice}
            </if>
            <if test="projectPackageType != null">
                AND `project_package_type` = #{projectPackageType}
            </if>
            <if test="projectPanAddress != null">
                AND `project_pan_address` = #{projectPanAddress}
            </if>
            <if test="projectHtmlBody != null">
                AND `project_html_body` = #{projectHtmlBody}
            </if>
            <if test="projectSourceUrl != null">
                AND `project_source_url` = #{projectSourceUrl}
            </if>
            <if test="projectLanguage != null">
                AND `project_language` = #{projectLanguage}
            </if>
            <if test="projectSize2 != null">
                AND `project_size2` = #{projectSize2}
            </if>
            <if test="projectSizeNum != null">
                AND `project_size_num` = #{projectSizeNum}
            </if>
            <if test="projectSizeType != null">
                AND `project_size_type` = #{projectSizeType}
            </if>
            <if test="projectImgs != null">
                AND `project_imgs` = #{projectImgs}
            </if>
            <if test="projectImgsDefault != null">
                AND `project_imgs_default` = #{projectImgsDefault}
            </if>
            <if test="projectRuntime != null">
                AND `project_runtime` = #{projectRuntime}
            </if>
            <if test="projectOfficialWebsite != null">
                AND `project_official_website` = #{projectOfficialWebsite}
            </if>
            <if test="projectShowWebsite != null">
                AND `project_show_website` = #{projectShowWebsite}
            </if>
            <if test="projectDownloadUrls != null">
                AND `project_download_urls` = #{projectDownloadUrls}
            </if>
            <if test="projectDownloadSum != null">
                AND `project_download_sum` = #{projectDownloadSum}
            </if>
            <if test="projectIntroduction != null">
                AND `project_introduction` = #{projectIntroduction}
            </if>
            <if test="projectStatus != null">
                AND `project_status` = #{projectStatus}
            </if>
            <if test="projectMark != null">
                AND `project_mark` = #{projectMark}
            </if>
            <if test="projectCanRunning != null">
                AND `project_can_running` = #{projectCanRunning}
            </if>
            <if test="projectSql != null">
                AND `project_sql` = #{projectSql}
            </if>
            <if test="projectPort != null">
                AND `project_port` = #{projectPort}
            </if>
            <if test="addressContainerOuter != null">
                AND `address_container_outer` = #{addressContainerOuter}
            </if>
            <if test="addressContainerInner != null">
                AND `address_container_inner` = #{addressContainerInner}
            </if>
            <if test="addressProjectFront != null">
                AND `address_project_front` = #{addressProjectFront}
            </if>
            <if test="addressProjectBackground != null">
                AND `address_project_background` = #{addressProjectBackground}
            </if>
            <if test="addressProjectBackgroundAccountPasswd != null">
                AND `address_project_background_account_passwd` = #{addressProjectBackgroundAccountPasswd}
            </if>
            <if test="devProjectRealFileName != null">
                AND `dev_project_real_file_name` = #{devProjectRealFileName}
            </if>
            <if test="devDockerImageName != null">
                AND `dev_docker_image_name` = #{devDockerImageName}
            </if>
            <if test="devDockerImageShellRemove != null">
                AND `dev_docker_image_shell_remove` = #{devDockerImageShellRemove}
            </if>
            <if test="devDockerContainerId != null">
                AND `dev_docker_container_id` = #{devDockerContainerId}
            </if>
            <if test="devDockerContainerName != null">
                AND `dev_docker_container_name` = #{devDockerContainerName}
            </if>
            <if test="devDockerContainerShellCreate != null">
                AND `dev_docker_container_shell_create` = #{devDockerContainerShellCreate}
            </if>
            <if test="devDockerContainerShellRun != null">
                AND `dev_docker_container_shell_run` = #{devDockerContainerShellRun}
            </if>
            <if test="devDockerContainerShellStop != null">
                AND `dev_docker_container_shell_stop` = #{devDockerContainerShellStop}
            </if>
            <if test="devDockerContainerShellRemove != null">
                AND `dev_docker_container_shell_remove` = #{devDockerContainerShellRemove}
            </if>
            <if test="devDockerStatusImagesIsExist != null">
                AND `dev_docker_status_images_is_exist` = #{devDockerStatusImagesIsExist}
            </if>
            <if test="devDockerStatusContainerIsExist != null">
                AND `dev_docker_status_container_is_exist` = #{devDockerStatusContainerIsExist}
            </if>
            <if test="devDockerStatusContainerIsRunning != null">
                AND `dev_docker_status_container_is_running` = #{devDockerStatusContainerIsRunning}
            </if>
            <if test="proProjectRealFileName != null">
                AND `pro_project_real_file_name` = #{proProjectRealFileName}
            </if>
            <if test="proDockerImageName != null">
                AND `pro_docker_image_name` = #{proDockerImageName}
            </if>
            <if test="proDockerImageShellRemove != null">
                AND `pro_docker_image_shell_remove` = #{proDockerImageShellRemove}
            </if>
            <if test="proDockerContainerId != null">
                AND `pro_docker_container_id` = #{proDockerContainerId}
            </if>
            <if test="proDockerContainerName != null">
                AND `pro_docker_container_name` = #{proDockerContainerName}
            </if>
            <if test="proDockerContainerShellCreate != null">
                AND `pro_docker_container_shell_create` = #{proDockerContainerShellCreate}
            </if>
            <if test="proDockerContainerShellRun != null">
                AND `pro_docker_container_shell_run` = #{proDockerContainerShellRun}
            </if>
            <if test="proDockerContainerShellStop != null">
                AND `pro_docker_container_shell_stop` = #{proDockerContainerShellStop}
            </if>
            <if test="proDockerContainerShellRemove != null">
                AND `pro_docker_container_shell_remove` = #{proDockerContainerShellRemove}
            </if>
            <if test="proDockerStatusImagesIsExist != null">
                AND `pro_docker_status_images_is_exist` = #{proDockerStatusImagesIsExist}
            </if>
            <if test="proDockerStatusContainerIsExist != null">
                AND `pro_docker_status_container_is_exist` = #{proDockerStatusContainerIsExist}
            </if>
            <if test="proDockerStatusContainerIsRunning != null">
                AND `pro_docker_status_container_is_running` = #{proDockerStatusContainerIsRunning}
            </if>
            <if test="updateTime != null">
                AND `update_time` = #{updateTime}
            </if>
        </where>
    </delete>


    <select id="queryByPrimaryKey" resultMap="resultMap"
            resultType="demomaster.vo.ProjectPlusVo">
        SELECT
        `id`,
        `criteriaId`,
        `project_name`,
        `project_update_time`,
        `project_type`,
        `project_price`,
        `project_package_type`,
        `project_pan_address`,
        `project_html_body`,
        `project_source_url`,
        `project_language`,
        `project_size2`,
        `project_size_num`,
        `project_size_type`,
        `project_imgs`,
        `project_imgs_default`,
        `project_runtime`,
        `project_official_website`,
        `project_show_website`,
        `project_download_urls`,
        `project_download_sum`,
        `project_introduction`,
        `project_status`,
        `project_mark`,
        `project_can_running`,
        `project_sql`,
        `project_port`,
        `address_container_outer`,
        `address_container_inner`,
        `address_project_front`,
        `address_project_background`,
        `address_project_background_account_passwd`,
        `dev_project_real_file_name`,
        `dev_docker_image_name`,
        `dev_docker_image_shell_remove`,
        `dev_docker_container_id`,
        `dev_docker_container_name`,
        `dev_docker_container_shell_create`,
        `dev_docker_container_shell_run`,
        `dev_docker_container_shell_stop`,
        `dev_docker_container_shell_remove`,
        `dev_docker_status_images_is_exist`,
        `dev_docker_status_container_is_exist`,
        `dev_docker_status_container_is_running`,
        `pro_project_real_file_name`,
        `pro_docker_image_name`,
        `pro_docker_image_shell_remove`,
        `pro_docker_container_id`,
        `pro_docker_container_name`,
        `pro_docker_container_shell_create`,
        `pro_docker_container_shell_run`,
        `pro_docker_container_shell_stop`,
        `pro_docker_container_shell_remove`,
        `pro_docker_status_images_is_exist`,
        `pro_docker_status_container_is_exist`,
        `pro_docker_status_container_is_running`,
        `update_time`
        FROM `project_plus`
        <where>
            1 =1
            AND `id` = #{id}
        </where>
    </select>

    <delete id="deleteByPrimaryKey">
        DELETE FROM `project_plus`
        <where>
            1 = 1
               AND `id` = #{id}
        </where>
    </delete>

    <update id="updateByPrimaryKey"
            parameterType="demomaster.vo.ProjectPlusVo">
        UPDATE `project_plus`
        <set>
               <if test="source.criteriaid != null">
                   `criteriaId` = #{source.criteriaid},
               </if>
               <if test="source.projectName != null">
                   `project_name` = #{source.projectName},
               </if>
               <if test="source.projectUpdateTime != null">
                   `project_update_time` = #{source.projectUpdateTime},
               </if>
               <if test="source.projectType != null">
                   `project_type` = #{source.projectType},
               </if>
               <if test="source.projectPrice != null">
                   `project_price` = #{source.projectPrice},
               </if>
               <if test="source.projectPackageType != null">
                   `project_package_type` = #{source.projectPackageType},
               </if>
               <if test="source.projectPanAddress != null">
                   `project_pan_address` = #{source.projectPanAddress},
               </if>
               <if test="source.projectHtmlBody != null">
                   `project_html_body` = #{source.projectHtmlBody},
               </if>
               <if test="source.projectSourceUrl != null">
                   `project_source_url` = #{source.projectSourceUrl},
               </if>
               <if test="source.projectLanguage != null">
                   `project_language` = #{source.projectLanguage},
               </if>
               <if test="source.projectSize2 != null">
                   `project_size2` = #{source.projectSize2},
               </if>
               <if test="source.projectSizeNum != null">
                   `project_size_num` = #{source.projectSizeNum},
               </if>
               <if test="source.projectSizeType != null">
                   `project_size_type` = #{source.projectSizeType},
               </if>
               <if test="source.projectImgs != null">
                   `project_imgs` = #{source.projectImgs},
               </if>
               <if test="source.projectImgsDefault != null">
                   `project_imgs_default` = #{source.projectImgsDefault},
               </if>
               <if test="source.projectRuntime != null">
                   `project_runtime` = #{source.projectRuntime},
               </if>
               <if test="source.projectOfficialWebsite != null">
                   `project_official_website` = #{source.projectOfficialWebsite},
               </if>
               <if test="source.projectShowWebsite != null">
                   `project_show_website` = #{source.projectShowWebsite},
               </if>
               <if test="source.projectDownloadUrls != null">
                   `project_download_urls` = #{source.projectDownloadUrls},
               </if>
               <if test="source.projectDownloadSum != null">
                   `project_download_sum` = #{source.projectDownloadSum},
               </if>
               <if test="source.projectIntroduction != null">
                   `project_introduction` = #{source.projectIntroduction},
               </if>
               <if test="source.projectStatus != null">
                   `project_status` = #{source.projectStatus},
               </if>
               <if test="source.projectMark != null">
                   `project_mark` = #{source.projectMark},
               </if>
               <if test="source.projectCanRunning != null">
                   `project_can_running` = #{source.projectCanRunning},
               </if>
               <if test="source.projectSql != null">
                   `project_sql` = #{source.projectSql},
               </if>
               <if test="source.projectPort != null">
                   `project_port` = #{source.projectPort},
               </if>
               <if test="source.addressContainerOuter != null">
                   `address_container_outer` = #{source.addressContainerOuter},
               </if>
               <if test="source.addressContainerInner != null">
                   `address_container_inner` = #{source.addressContainerInner},
               </if>
               <if test="source.addressProjectFront != null">
                   `address_project_front` = #{source.addressProjectFront},
               </if>
               <if test="source.addressProjectBackground != null">
                   `address_project_background` = #{source.addressProjectBackground},
               </if>
               <if test="source.addressProjectBackgroundAccountPasswd != null">
                   `address_project_background_account_passwd` = #{source.addressProjectBackgroundAccountPasswd},
               </if>
               <if test="source.devProjectRealFileName != null">
                   `dev_project_real_file_name` = #{source.devProjectRealFileName},
               </if>
               <if test="source.devDockerImageName != null">
                   `dev_docker_image_name` = #{source.devDockerImageName},
               </if>
               <if test="source.devDockerImageShellRemove != null">
                   `dev_docker_image_shell_remove` = #{source.devDockerImageShellRemove},
               </if>
               <if test="source.devDockerContainerId != null">
                   `dev_docker_container_id` = #{source.devDockerContainerId},
               </if>
               <if test="source.devDockerContainerName != null">
                   `dev_docker_container_name` = #{source.devDockerContainerName},
               </if>
               <if test="source.devDockerContainerShellCreate != null">
                   `dev_docker_container_shell_create` = #{source.devDockerContainerShellCreate},
               </if>
               <if test="source.devDockerContainerShellRun != null">
                   `dev_docker_container_shell_run` = #{source.devDockerContainerShellRun},
               </if>
               <if test="source.devDockerContainerShellStop != null">
                   `dev_docker_container_shell_stop` = #{source.devDockerContainerShellStop},
               </if>
               <if test="source.devDockerContainerShellRemove != null">
                   `dev_docker_container_shell_remove` = #{source.devDockerContainerShellRemove},
               </if>
               <if test="source.devDockerStatusImagesIsExist != null">
                   `dev_docker_status_images_is_exist` = #{source.devDockerStatusImagesIsExist},
               </if>
               <if test="source.devDockerStatusContainerIsExist != null">
                   `dev_docker_status_container_is_exist` = #{source.devDockerStatusContainerIsExist},
               </if>
               <if test="source.devDockerStatusContainerIsRunning != null">
                   `dev_docker_status_container_is_running` = #{source.devDockerStatusContainerIsRunning},
               </if>
               <if test="source.proProjectRealFileName != null">
                   `pro_project_real_file_name` = #{source.proProjectRealFileName},
               </if>
               <if test="source.proDockerImageName != null">
                   `pro_docker_image_name` = #{source.proDockerImageName},
               </if>
               <if test="source.proDockerImageShellRemove != null">
                   `pro_docker_image_shell_remove` = #{source.proDockerImageShellRemove},
               </if>
               <if test="source.proDockerContainerId != null">
                   `pro_docker_container_id` = #{source.proDockerContainerId},
               </if>
               <if test="source.proDockerContainerName != null">
                   `pro_docker_container_name` = #{source.proDockerContainerName},
               </if>
               <if test="source.proDockerContainerShellCreate != null">
                   `pro_docker_container_shell_create` = #{source.proDockerContainerShellCreate},
               </if>
               <if test="source.proDockerContainerShellRun != null">
                   `pro_docker_container_shell_run` = #{source.proDockerContainerShellRun},
               </if>
               <if test="source.proDockerContainerShellStop != null">
                   `pro_docker_container_shell_stop` = #{source.proDockerContainerShellStop},
               </if>
               <if test="source.proDockerContainerShellRemove != null">
                   `pro_docker_container_shell_remove` = #{source.proDockerContainerShellRemove},
               </if>
               <if test="source.proDockerStatusImagesIsExist != null">
                   `pro_docker_status_images_is_exist` = #{source.proDockerStatusImagesIsExist},
               </if>
               <if test="source.proDockerStatusContainerIsExist != null">
                   `pro_docker_status_container_is_exist` = #{source.proDockerStatusContainerIsExist},
               </if>
               <if test="source.proDockerStatusContainerIsRunning != null">
                   `pro_docker_status_container_is_running` = #{source.proDockerStatusContainerIsRunning},
               </if>
               <if test="source.updateTime != null">
                   `update_time` = #{source.updateTime}
               </if>
        </set>
        <where>
            1 =1
               AND `id` = #{target.id}
        </where>
    </update>

</mapper>